

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 12 17:10:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F15324 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0012                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  001A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0119                     	;# 
    90  0119                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011A                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011C                     	;# 
   102  011C                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  011E                     	;# 
   108  011E                     	;# 
   109  011F                     	;# 
   110  011F                     	;# 
   111  011F                     	;# 
   112  011F                     	;# 
   113  011F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  020C                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  020F                     	;# 
   126  020F                     	;# 
   127  0210                     	;# 
   128  0210                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  028C                     	;# 
   132  028C                     	;# 
   133  028D                     	;# 
   134  028D                     	;# 
   135  028E                     	;# 
   136  028F                     	;# 
   137  0290                     	;# 
   138  0291                     	;# 
   139  030C                     	;# 
   140  030C                     	;# 
   141  030D                     	;# 
   142  030E                     	;# 
   143  030F                     	;# 
   144  0310                     	;# 
   145  0310                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0314                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0316                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  031C                     	;# 
   158  031C                     	;# 
   159  031D                     	;# 
   160  031E                     	;# 
   161  038C                     	;# 
   162  038C                     	;# 
   163  038D                     	;# 
   164  038E                     	;# 
   165  058C                     	;# 
   166  058C                     	;# 
   167  058D                     	;# 
   168  058E                     	;# 
   169  058F                     	;# 
   170  058F                     	;# 
   171  0590                     	;# 
   172  0591                     	;# 
   173  0592                     	;# 
   174  0593                     	;# 
   175  059C                     	;# 
   176  059C                     	;# 
   177  059D                     	;# 
   178  059D                     	;# 
   179  059E                     	;# 
   180  059F                     	;# 
   181  060C                     	;# 
   182  060D                     	;# 
   183  060E                     	;# 
   184  060F                     	;# 
   185  0610                     	;# 
   186  0611                     	;# 
   187  0612                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  070C                     	;# 
   191  070D                     	;# 
   192  070E                     	;# 
   193  070F                     	;# 
   194  0710                     	;# 
   195  0711                     	;# 
   196  0712                     	;# 
   197  0713                     	;# 
   198  0716                     	;# 
   199  0717                     	;# 
   200  0718                     	;# 
   201  0719                     	;# 
   202  071A                     	;# 
   203  071B                     	;# 
   204  071C                     	;# 
   205  071D                     	;# 
   206  0796                     	;# 
   207  0797                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  079A                     	;# 
   211  079B                     	;# 
   212  080C                     	;# 
   213  080D                     	;# 
   214  080E                     	;# 
   215  080F                     	;# 
   216  0810                     	;# 
   217  0811                     	;# 
   218  0812                     	;# 
   219  0813                     	;# 
   220  0814                     	;# 
   221  081A                     	;# 
   222  081A                     	;# 
   223  081B                     	;# 
   224  081C                     	;# 
   225  081C                     	;# 
   226  081D                     	;# 
   227  081E                     	;# 
   228  081F                     	;# 
   229  088C                     	;# 
   230  088D                     	;# 
   231  088E                     	;# 
   232  088F                     	;# 
   233  0890                     	;# 
   234  0891                     	;# 
   235  0892                     	;# 
   236  0893                     	;# 
   237  0895                     	;# 
   238  0896                     	;# 
   239  090C                     	;# 
   240  090E                     	;# 
   241  090F                     	;# 
   242  091F                     	;# 
   243  098F                     	;# 
   244  098F                     	;# 
   245  0990                     	;# 
   246  0991                     	;# 
   247  0992                     	;# 
   248  0993                     	;# 
   249  0994                     	;# 
   250  0995                     	;# 
   251  0996                     	;# 
   252  0997                     	;# 
   253  0A19                     	;# 
   254  0A19                     	;# 
   255  0A1A                     	;# 
   256  0A1A                     	;# 
   257  0A1B                     	;# 
   258  0A1B                     	;# 
   259  0A1B                     	;# 
   260  0A1C                     	;# 
   261  0A1C                     	;# 
   262  0A1D                     	;# 
   263  0A1D                     	;# 
   264  0A1E                     	;# 
   265  0A1E                     	;# 
   266  0A1F                     	;# 
   267  0A1F                     	;# 
   268  0A1F                     	;# 
   269  1E0F                     	;# 
   270  1E10                     	;# 
   271  1E11                     	;# 
   272  1E12                     	;# 
   273  1E13                     	;# 
   274  1E14                     	;# 
   275  1E15                     	;# 
   276  1E16                     	;# 
   277  1E17                     	;# 
   278  1E18                     	;# 
   279  1E19                     	;# 
   280  1E1A                     	;# 
   281  1E1B                     	;# 
   282  1E1C                     	;# 
   283  1E1D                     	;# 
   284  1E1E                     	;# 
   285  1E1F                     	;# 
   286  1E20                     	;# 
   287  1E21                     	;# 
   288  1E22                     	;# 
   289  1E23                     	;# 
   290  1E24                     	;# 
   291  1E25                     	;# 
   292  1E26                     	;# 
   293  1E27                     	;# 
   294  1E28                     	;# 
   295  1E29                     	;# 
   296  1E2A                     	;# 
   297  1E2B                     	;# 
   298  1E2C                     	;# 
   299  1E2D                     	;# 
   300  1E2E                     	;# 
   301  1E2F                     	;# 
   302  1E30                     	;# 
   303  1E31                     	;# 
   304  1E32                     	;# 
   305  1E33                     	;# 
   306  1E34                     	;# 
   307  1E35                     	;# 
   308  1E36                     	;# 
   309  1E37                     	;# 
   310  1E8F                     	;# 
   311  1E90                     	;# 
   312  1E91                     	;# 
   313  1E92                     	;# 
   314  1E93                     	;# 
   315  1E9C                     	;# 
   316  1EA1                     	;# 
   317  1EA2                     	;# 
   318  1EB1                     	;# 
   319  1EBB                     	;# 
   320  1EBC                     	;# 
   321  1EBD                     	;# 
   322  1EBE                     	;# 
   323  1EC3                     	;# 
   324  1EC5                     	;# 
   325  1EC6                     	;# 
   326  1EC7                     	;# 
   327  1ECB                     	;# 
   328  1ECC                     	;# 
   329  1ECD                     	;# 
   330  1ECE                     	;# 
   331  1F10                     	;# 
   332  1F11                     	;# 
   333  1F12                     	;# 
   334  1F13                     	;# 
   335  1F14                     	;# 
   336  1F15                     	;# 
   337  1F20                     	;# 
   338  1F21                     	;# 
   339  1F22                     	;# 
   340  1F23                     	;# 
   341  1F24                     	;# 
   342  1F25                     	;# 
   343  1F38                     	;# 
   344  1F39                     	;# 
   345  1F3A                     	;# 
   346  1F3B                     	;# 
   347  1F3C                     	;# 
   348  1F3D                     	;# 
   349  1F3E                     	;# 
   350  1F3F                     	;# 
   351  1F4E                     	;# 
   352  1F4F                     	;# 
   353  1F50                     	;# 
   354  1F51                     	;# 
   355  1F52                     	;# 
   356  1F53                     	;# 
   357  1F54                     	;# 
   358  1F55                     	;# 
   359  1FE4                     	;# 
   360  1FE5                     	;# 
   361  1FE6                     	;# 
   362  1FE7                     	;# 
   363  1FE8                     	;# 
   364  1FE8                     	;# 
   365  1FE9                     	;# 
   366  1FEA                     	;# 
   367  1FEA                     	;# 
   368  1FEB                     	;# 
   369  1FED                     	;# 
   370  1FEE                     	;# 
   371  1FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000E                     	;# 
   386  0012                     	;# 
   387  0014                     	;# 
   388  0018                     	;# 
   389  001A                     	;# 
   390  009B                     	;# 
   391  009B                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  009F                     	;# 
   396  0119                     	;# 
   397  0119                     	;# 
   398  0119                     	;# 
   399  011A                     	;# 
   400  011A                     	;# 
   401  011A                     	;# 
   402  011B                     	;# 
   403  011B                     	;# 
   404  011B                     	;# 
   405  011B                     	;# 
   406  011B                     	;# 
   407  011C                     	;# 
   408  011C                     	;# 
   409  011C                     	;# 
   410  011D                     	;# 
   411  011D                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  011E                     	;# 
   415  011E                     	;# 
   416  011F                     	;# 
   417  011F                     	;# 
   418  011F                     	;# 
   419  011F                     	;# 
   420  011F                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  018E                     	;# 
   424  018F                     	;# 
   425  0190                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  020C                     	;# 
   429  020C                     	;# 
   430  020D                     	;# 
   431  020E                     	;# 
   432  020F                     	;# 
   433  020F                     	;# 
   434  0210                     	;# 
   435  0210                     	;# 
   436  0211                     	;# 
   437  0211                     	;# 
   438  028C                     	;# 
   439  028C                     	;# 
   440  028D                     	;# 
   441  028D                     	;# 
   442  028E                     	;# 
   443  028F                     	;# 
   444  0290                     	;# 
   445  0291                     	;# 
   446  030C                     	;# 
   447  030C                     	;# 
   448  030D                     	;# 
   449  030E                     	;# 
   450  030F                     	;# 
   451  0310                     	;# 
   452  0310                     	;# 
   453  0311                     	;# 
   454  0312                     	;# 
   455  0313                     	;# 
   456  0314                     	;# 
   457  0314                     	;# 
   458  0315                     	;# 
   459  0316                     	;# 
   460  0318                     	;# 
   461  0318                     	;# 
   462  0319                     	;# 
   463  031A                     	;# 
   464  031C                     	;# 
   465  031C                     	;# 
   466  031D                     	;# 
   467  031E                     	;# 
   468  038C                     	;# 
   469  038C                     	;# 
   470  038D                     	;# 
   471  038E                     	;# 
   472  058C                     	;# 
   473  058C                     	;# 
   474  058D                     	;# 
   475  058E                     	;# 
   476  058F                     	;# 
   477  058F                     	;# 
   478  0590                     	;# 
   479  0591                     	;# 
   480  0592                     	;# 
   481  0593                     	;# 
   482  059C                     	;# 
   483  059C                     	;# 
   484  059D                     	;# 
   485  059D                     	;# 
   486  059E                     	;# 
   487  059F                     	;# 
   488  060C                     	;# 
   489  060D                     	;# 
   490  060E                     	;# 
   491  060F                     	;# 
   492  0610                     	;# 
   493  0611                     	;# 
   494  0612                     	;# 
   495  0613                     	;# 
   496  0614                     	;# 
   497  070C                     	;# 
   498  070D                     	;# 
   499  070E                     	;# 
   500  070F                     	;# 
   501  0710                     	;# 
   502  0711                     	;# 
   503  0712                     	;# 
   504  0713                     	;# 
   505  0716                     	;# 
   506  0717                     	;# 
   507  0718                     	;# 
   508  0719                     	;# 
   509  071A                     	;# 
   510  071B                     	;# 
   511  071C                     	;# 
   512  071D                     	;# 
   513  0796                     	;# 
   514  0797                     	;# 
   515  0798                     	;# 
   516  0799                     	;# 
   517  079A                     	;# 
   518  079B                     	;# 
   519  080C                     	;# 
   520  080D                     	;# 
   521  080E                     	;# 
   522  080F                     	;# 
   523  0810                     	;# 
   524  0811                     	;# 
   525  0812                     	;# 
   526  0813                     	;# 
   527  0814                     	;# 
   528  081A                     	;# 
   529  081A                     	;# 
   530  081B                     	;# 
   531  081C                     	;# 
   532  081C                     	;# 
   533  081D                     	;# 
   534  081E                     	;# 
   535  081F                     	;# 
   536  088C                     	;# 
   537  088D                     	;# 
   538  088E                     	;# 
   539  088F                     	;# 
   540  0890                     	;# 
   541  0891                     	;# 
   542  0892                     	;# 
   543  0893                     	;# 
   544  0895                     	;# 
   545  0896                     	;# 
   546  090C                     	;# 
   547  090E                     	;# 
   548  090F                     	;# 
   549  091F                     	;# 
   550  098F                     	;# 
   551  098F                     	;# 
   552  0990                     	;# 
   553  0991                     	;# 
   554  0992                     	;# 
   555  0993                     	;# 
   556  0994                     	;# 
   557  0995                     	;# 
   558  0996                     	;# 
   559  0997                     	;# 
   560  0A19                     	;# 
   561  0A19                     	;# 
   562  0A1A                     	;# 
   563  0A1A                     	;# 
   564  0A1B                     	;# 
   565  0A1B                     	;# 
   566  0A1B                     	;# 
   567  0A1C                     	;# 
   568  0A1C                     	;# 
   569  0A1D                     	;# 
   570  0A1D                     	;# 
   571  0A1E                     	;# 
   572  0A1E                     	;# 
   573  0A1F                     	;# 
   574  0A1F                     	;# 
   575  0A1F                     	;# 
   576  1E0F                     	;# 
   577  1E10                     	;# 
   578  1E11                     	;# 
   579  1E12                     	;# 
   580  1E13                     	;# 
   581  1E14                     	;# 
   582  1E15                     	;# 
   583  1E16                     	;# 
   584  1E17                     	;# 
   585  1E18                     	;# 
   586  1E19                     	;# 
   587  1E1A                     	;# 
   588  1E1B                     	;# 
   589  1E1C                     	;# 
   590  1E1D                     	;# 
   591  1E1E                     	;# 
   592  1E1F                     	;# 
   593  1E20                     	;# 
   594  1E21                     	;# 
   595  1E22                     	;# 
   596  1E23                     	;# 
   597  1E24                     	;# 
   598  1E25                     	;# 
   599  1E26                     	;# 
   600  1E27                     	;# 
   601  1E28                     	;# 
   602  1E29                     	;# 
   603  1E2A                     	;# 
   604  1E2B                     	;# 
   605  1E2C                     	;# 
   606  1E2D                     	;# 
   607  1E2E                     	;# 
   608  1E2F                     	;# 
   609  1E30                     	;# 
   610  1E31                     	;# 
   611  1E32                     	;# 
   612  1E33                     	;# 
   613  1E34                     	;# 
   614  1E35                     	;# 
   615  1E36                     	;# 
   616  1E37                     	;# 
   617  1E8F                     	;# 
   618  1E90                     	;# 
   619  1E91                     	;# 
   620  1E92                     	;# 
   621  1E93                     	;# 
   622  1E9C                     	;# 
   623  1EA1                     	;# 
   624  1EA2                     	;# 
   625  1EB1                     	;# 
   626  1EBB                     	;# 
   627  1EBC                     	;# 
   628  1EBD                     	;# 
   629  1EBE                     	;# 
   630  1EC3                     	;# 
   631  1EC5                     	;# 
   632  1EC6                     	;# 
   633  1EC7                     	;# 
   634  1ECB                     	;# 
   635  1ECC                     	;# 
   636  1ECD                     	;# 
   637  1ECE                     	;# 
   638  1F10                     	;# 
   639  1F11                     	;# 
   640  1F12                     	;# 
   641  1F13                     	;# 
   642  1F14                     	;# 
   643  1F15                     	;# 
   644  1F20                     	;# 
   645  1F21                     	;# 
   646  1F22                     	;# 
   647  1F23                     	;# 
   648  1F24                     	;# 
   649  1F25                     	;# 
   650  1F38                     	;# 
   651  1F39                     	;# 
   652  1F3A                     	;# 
   653  1F3B                     	;# 
   654  1F3C                     	;# 
   655  1F3D                     	;# 
   656  1F3E                     	;# 
   657  1F3F                     	;# 
   658  1F4E                     	;# 
   659  1F4F                     	;# 
   660  1F50                     	;# 
   661  1F51                     	;# 
   662  1F52                     	;# 
   663  1F53                     	;# 
   664  1F54                     	;# 
   665  1F55                     	;# 
   666  1FE4                     	;# 
   667  1FE5                     	;# 
   668  1FE6                     	;# 
   669  1FE7                     	;# 
   670  1FE8                     	;# 
   671  1FE8                     	;# 
   672  1FE9                     	;# 
   673  1FEA                     	;# 
   674  1FEA                     	;# 
   675  1FEB                     	;# 
   676  1FED                     	;# 
   677  1FEE                     	;# 
   678  1FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000E                     	;# 
   693  0012                     	;# 
   694  0014                     	;# 
   695  0018                     	;# 
   696  001A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0119                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011C                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  020C                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  020E                     	;# 
   739  020F                     	;# 
   740  020F                     	;# 
   741  0210                     	;# 
   742  0210                     	;# 
   743  0211                     	;# 
   744  0211                     	;# 
   745  028C                     	;# 
   746  028C                     	;# 
   747  028D                     	;# 
   748  028D                     	;# 
   749  028E                     	;# 
   750  028F                     	;# 
   751  0290                     	;# 
   752  0291                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0318                     	;# 
   768  0318                     	;# 
   769  0319                     	;# 
   770  031A                     	;# 
   771  031C                     	;# 
   772  031C                     	;# 
   773  031D                     	;# 
   774  031E                     	;# 
   775  038C                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  058C                     	;# 
   780  058C                     	;# 
   781  058D                     	;# 
   782  058E                     	;# 
   783  058F                     	;# 
   784  058F                     	;# 
   785  0590                     	;# 
   786  0591                     	;# 
   787  0592                     	;# 
   788  0593                     	;# 
   789  059C                     	;# 
   790  059C                     	;# 
   791  059D                     	;# 
   792  059D                     	;# 
   793  059E                     	;# 
   794  059F                     	;# 
   795  060C                     	;# 
   796  060D                     	;# 
   797  060E                     	;# 
   798  060F                     	;# 
   799  0610                     	;# 
   800  0611                     	;# 
   801  0612                     	;# 
   802  0613                     	;# 
   803  0614                     	;# 
   804  070C                     	;# 
   805  070D                     	;# 
   806  070E                     	;# 
   807  070F                     	;# 
   808  0710                     	;# 
   809  0711                     	;# 
   810  0712                     	;# 
   811  0713                     	;# 
   812  0716                     	;# 
   813  0717                     	;# 
   814  0718                     	;# 
   815  0719                     	;# 
   816  071A                     	;# 
   817  071B                     	;# 
   818  071C                     	;# 
   819  071D                     	;# 
   820  0796                     	;# 
   821  0797                     	;# 
   822  0798                     	;# 
   823  0799                     	;# 
   824  079A                     	;# 
   825  079B                     	;# 
   826  080C                     	;# 
   827  080D                     	;# 
   828  080E                     	;# 
   829  080F                     	;# 
   830  0810                     	;# 
   831  0811                     	;# 
   832  0812                     	;# 
   833  0813                     	;# 
   834  0814                     	;# 
   835  081A                     	;# 
   836  081A                     	;# 
   837  081B                     	;# 
   838  081C                     	;# 
   839  081C                     	;# 
   840  081D                     	;# 
   841  081E                     	;# 
   842  081F                     	;# 
   843  088C                     	;# 
   844  088D                     	;# 
   845  088E                     	;# 
   846  088F                     	;# 
   847  0890                     	;# 
   848  0891                     	;# 
   849  0892                     	;# 
   850  0893                     	;# 
   851  0895                     	;# 
   852  0896                     	;# 
   853  090C                     	;# 
   854  090E                     	;# 
   855  090F                     	;# 
   856  091F                     	;# 
   857  098F                     	;# 
   858  098F                     	;# 
   859  0990                     	;# 
   860  0991                     	;# 
   861  0992                     	;# 
   862  0993                     	;# 
   863  0994                     	;# 
   864  0995                     	;# 
   865  0996                     	;# 
   866  0997                     	;# 
   867  0A19                     	;# 
   868  0A19                     	;# 
   869  0A1A                     	;# 
   870  0A1A                     	;# 
   871  0A1B                     	;# 
   872  0A1B                     	;# 
   873  0A1B                     	;# 
   874  0A1C                     	;# 
   875  0A1C                     	;# 
   876  0A1D                     	;# 
   877  0A1D                     	;# 
   878  0A1E                     	;# 
   879  0A1E                     	;# 
   880  0A1F                     	;# 
   881  0A1F                     	;# 
   882  0A1F                     	;# 
   883  1E0F                     	;# 
   884  1E10                     	;# 
   885  1E11                     	;# 
   886  1E12                     	;# 
   887  1E13                     	;# 
   888  1E14                     	;# 
   889  1E15                     	;# 
   890  1E16                     	;# 
   891  1E17                     	;# 
   892  1E18                     	;# 
   893  1E19                     	;# 
   894  1E1A                     	;# 
   895  1E1B                     	;# 
   896  1E1C                     	;# 
   897  1E1D                     	;# 
   898  1E1E                     	;# 
   899  1E1F                     	;# 
   900  1E20                     	;# 
   901  1E21                     	;# 
   902  1E22                     	;# 
   903  1E23                     	;# 
   904  1E24                     	;# 
   905  1E25                     	;# 
   906  1E26                     	;# 
   907  1E27                     	;# 
   908  1E28                     	;# 
   909  1E29                     	;# 
   910  1E2A                     	;# 
   911  1E2B                     	;# 
   912  1E2C                     	;# 
   913  1E2D                     	;# 
   914  1E2E                     	;# 
   915  1E2F                     	;# 
   916  1E30                     	;# 
   917  1E31                     	;# 
   918  1E32                     	;# 
   919  1E33                     	;# 
   920  1E34                     	;# 
   921  1E35                     	;# 
   922  1E36                     	;# 
   923  1E37                     	;# 
   924  1E8F                     	;# 
   925  1E90                     	;# 
   926  1E91                     	;# 
   927  1E92                     	;# 
   928  1E93                     	;# 
   929  1E9C                     	;# 
   930  1EA1                     	;# 
   931  1EA2                     	;# 
   932  1EB1                     	;# 
   933  1EBB                     	;# 
   934  1EBC                     	;# 
   935  1EBD                     	;# 
   936  1EBE                     	;# 
   937  1EC3                     	;# 
   938  1EC5                     	;# 
   939  1EC6                     	;# 
   940  1EC7                     	;# 
   941  1ECB                     	;# 
   942  1ECC                     	;# 
   943  1ECD                     	;# 
   944  1ECE                     	;# 
   945  1F10                     	;# 
   946  1F11                     	;# 
   947  1F12                     	;# 
   948  1F13                     	;# 
   949  1F14                     	;# 
   950  1F15                     	;# 
   951  1F20                     	;# 
   952  1F21                     	;# 
   953  1F22                     	;# 
   954  1F23                     	;# 
   955  1F24                     	;# 
   956  1F25                     	;# 
   957  1F38                     	;# 
   958  1F39                     	;# 
   959  1F3A                     	;# 
   960  1F3B                     	;# 
   961  1F3C                     	;# 
   962  1F3D                     	;# 
   963  1F3E                     	;# 
   964  1F3F                     	;# 
   965  1F4E                     	;# 
   966  1F4F                     	;# 
   967  1F50                     	;# 
   968  1F51                     	;# 
   969  1F52                     	;# 
   970  1F53                     	;# 
   971  1F54                     	;# 
   972  1F55                     	;# 
   973  1FE4                     	;# 
   974  1FE5                     	;# 
   975  1FE6                     	;# 
   976  1FE7                     	;# 
   977  1FE8                     	;# 
   978  1FE8                     	;# 
   979  1FE9                     	;# 
   980  1FEA                     	;# 
   981  1FEA                     	;# 
   982  1FEB                     	;# 
   983  1FED                     	;# 
   984  1FEE                     	;# 
   985  1FEF                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0008                     	;# 
   995  0009                     	;# 
   996  000A                     	;# 
   997  000B                     	;# 
   998  000C                     	;# 
   999  000E                     	;# 
  1000  0012                     	;# 
  1001  0014                     	;# 
  1002  0018                     	;# 
  1003  001A                     	;# 
  1004  009B                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  0119                     	;# 
  1011  0119                     	;# 
  1012  0119                     	;# 
  1013  011A                     	;# 
  1014  011A                     	;# 
  1015  011A                     	;# 
  1016  011B                     	;# 
  1017  011B                     	;# 
  1018  011B                     	;# 
  1019  011B                     	;# 
  1020  011B                     	;# 
  1021  011C                     	;# 
  1022  011C                     	;# 
  1023  011C                     	;# 
  1024  011D                     	;# 
  1025  011D                     	;# 
  1026  011D                     	;# 
  1027  011E                     	;# 
  1028  011E                     	;# 
  1029  011E                     	;# 
  1030  011F                     	;# 
  1031  011F                     	;# 
  1032  011F                     	;# 
  1033  011F                     	;# 
  1034  011F                     	;# 
  1035  018C                     	;# 
  1036  018D                     	;# 
  1037  018E                     	;# 
  1038  018F                     	;# 
  1039  0190                     	;# 
  1040  0191                     	;# 
  1041  0192                     	;# 
  1042  020C                     	;# 
  1043  020C                     	;# 
  1044  020D                     	;# 
  1045  020E                     	;# 
  1046  020F                     	;# 
  1047  020F                     	;# 
  1048  0210                     	;# 
  1049  0210                     	;# 
  1050  0211                     	;# 
  1051  0211                     	;# 
  1052  028C                     	;# 
  1053  028C                     	;# 
  1054  028D                     	;# 
  1055  028D                     	;# 
  1056  028E                     	;# 
  1057  028F                     	;# 
  1058  0290                     	;# 
  1059  0291                     	;# 
  1060  030C                     	;# 
  1061  030C                     	;# 
  1062  030D                     	;# 
  1063  030E                     	;# 
  1064  030F                     	;# 
  1065  0310                     	;# 
  1066  0310                     	;# 
  1067  0311                     	;# 
  1068  0312                     	;# 
  1069  0313                     	;# 
  1070  0314                     	;# 
  1071  0314                     	;# 
  1072  0315                     	;# 
  1073  0316                     	;# 
  1074  0318                     	;# 
  1075  0318                     	;# 
  1076  0319                     	;# 
  1077  031A                     	;# 
  1078  031C                     	;# 
  1079  031C                     	;# 
  1080  031D                     	;# 
  1081  031E                     	;# 
  1082  038C                     	;# 
  1083  038C                     	;# 
  1084  038D                     	;# 
  1085  038E                     	;# 
  1086  058C                     	;# 
  1087  058C                     	;# 
  1088  058D                     	;# 
  1089  058E                     	;# 
  1090  058F                     	;# 
  1091  058F                     	;# 
  1092  0590                     	;# 
  1093  0591                     	;# 
  1094  0592                     	;# 
  1095  0593                     	;# 
  1096  059C                     	;# 
  1097  059C                     	;# 
  1098  059D                     	;# 
  1099  059D                     	;# 
  1100  059E                     	;# 
  1101  059F                     	;# 
  1102  060C                     	;# 
  1103  060D                     	;# 
  1104  060E                     	;# 
  1105  060F                     	;# 
  1106  0610                     	;# 
  1107  0611                     	;# 
  1108  0612                     	;# 
  1109  0613                     	;# 
  1110  0614                     	;# 
  1111  070C                     	;# 
  1112  070D                     	;# 
  1113  070E                     	;# 
  1114  070F                     	;# 
  1115  0710                     	;# 
  1116  0711                     	;# 
  1117  0712                     	;# 
  1118  0713                     	;# 
  1119  0716                     	;# 
  1120  0717                     	;# 
  1121  0718                     	;# 
  1122  0719                     	;# 
  1123  071A                     	;# 
  1124  071B                     	;# 
  1125  071C                     	;# 
  1126  071D                     	;# 
  1127  0796                     	;# 
  1128  0797                     	;# 
  1129  0798                     	;# 
  1130  0799                     	;# 
  1131  079A                     	;# 
  1132  079B                     	;# 
  1133  080C                     	;# 
  1134  080D                     	;# 
  1135  080E                     	;# 
  1136  080F                     	;# 
  1137  0810                     	;# 
  1138  0811                     	;# 
  1139  0812                     	;# 
  1140  0813                     	;# 
  1141  0814                     	;# 
  1142  081A                     	;# 
  1143  081A                     	;# 
  1144  081B                     	;# 
  1145  081C                     	;# 
  1146  081C                     	;# 
  1147  081D                     	;# 
  1148  081E                     	;# 
  1149  081F                     	;# 
  1150  088C                     	;# 
  1151  088D                     	;# 
  1152  088E                     	;# 
  1153  088F                     	;# 
  1154  0890                     	;# 
  1155  0891                     	;# 
  1156  0892                     	;# 
  1157  0893                     	;# 
  1158  0895                     	;# 
  1159  0896                     	;# 
  1160  090C                     	;# 
  1161  090E                     	;# 
  1162  090F                     	;# 
  1163  091F                     	;# 
  1164  098F                     	;# 
  1165  098F                     	;# 
  1166  0990                     	;# 
  1167  0991                     	;# 
  1168  0992                     	;# 
  1169  0993                     	;# 
  1170  0994                     	;# 
  1171  0995                     	;# 
  1172  0996                     	;# 
  1173  0997                     	;# 
  1174  0A19                     	;# 
  1175  0A19                     	;# 
  1176  0A1A                     	;# 
  1177  0A1A                     	;# 
  1178  0A1B                     	;# 
  1179  0A1B                     	;# 
  1180  0A1B                     	;# 
  1181  0A1C                     	;# 
  1182  0A1C                     	;# 
  1183  0A1D                     	;# 
  1184  0A1D                     	;# 
  1185  0A1E                     	;# 
  1186  0A1E                     	;# 
  1187  0A1F                     	;# 
  1188  0A1F                     	;# 
  1189  0A1F                     	;# 
  1190  1E0F                     	;# 
  1191  1E10                     	;# 
  1192  1E11                     	;# 
  1193  1E12                     	;# 
  1194  1E13                     	;# 
  1195  1E14                     	;# 
  1196  1E15                     	;# 
  1197  1E16                     	;# 
  1198  1E17                     	;# 
  1199  1E18                     	;# 
  1200  1E19                     	;# 
  1201  1E1A                     	;# 
  1202  1E1B                     	;# 
  1203  1E1C                     	;# 
  1204  1E1D                     	;# 
  1205  1E1E                     	;# 
  1206  1E1F                     	;# 
  1207  1E20                     	;# 
  1208  1E21                     	;# 
  1209  1E22                     	;# 
  1210  1E23                     	;# 
  1211  1E24                     	;# 
  1212  1E25                     	;# 
  1213  1E26                     	;# 
  1214  1E27                     	;# 
  1215  1E28                     	;# 
  1216  1E29                     	;# 
  1217  1E2A                     	;# 
  1218  1E2B                     	;# 
  1219  1E2C                     	;# 
  1220  1E2D                     	;# 
  1221  1E2E                     	;# 
  1222  1E2F                     	;# 
  1223  1E30                     	;# 
  1224  1E31                     	;# 
  1225  1E32                     	;# 
  1226  1E33                     	;# 
  1227  1E34                     	;# 
  1228  1E35                     	;# 
  1229  1E36                     	;# 
  1230  1E37                     	;# 
  1231  1E8F                     	;# 
  1232  1E90                     	;# 
  1233  1E91                     	;# 
  1234  1E92                     	;# 
  1235  1E93                     	;# 
  1236  1E9C                     	;# 
  1237  1EA1                     	;# 
  1238  1EA2                     	;# 
  1239  1EB1                     	;# 
  1240  1EBB                     	;# 
  1241  1EBC                     	;# 
  1242  1EBD                     	;# 
  1243  1EBE                     	;# 
  1244  1EC3                     	;# 
  1245  1EC5                     	;# 
  1246  1EC6                     	;# 
  1247  1EC7                     	;# 
  1248  1ECB                     	;# 
  1249  1ECC                     	;# 
  1250  1ECD                     	;# 
  1251  1ECE                     	;# 
  1252  1F10                     	;# 
  1253  1F11                     	;# 
  1254  1F12                     	;# 
  1255  1F13                     	;# 
  1256  1F14                     	;# 
  1257  1F15                     	;# 
  1258  1F20                     	;# 
  1259  1F21                     	;# 
  1260  1F22                     	;# 
  1261  1F23                     	;# 
  1262  1F24                     	;# 
  1263  1F25                     	;# 
  1264  1F38                     	;# 
  1265  1F39                     	;# 
  1266  1F3A                     	;# 
  1267  1F3B                     	;# 
  1268  1F3C                     	;# 
  1269  1F3D                     	;# 
  1270  1F3E                     	;# 
  1271  1F3F                     	;# 
  1272  1F4E                     	;# 
  1273  1F4F                     	;# 
  1274  1F50                     	;# 
  1275  1F51                     	;# 
  1276  1F52                     	;# 
  1277  1F53                     	;# 
  1278  1F54                     	;# 
  1279  1F55                     	;# 
  1280  1FE4                     	;# 
  1281  1FE5                     	;# 
  1282  1FE6                     	;# 
  1283  1FE7                     	;# 
  1284  1FE8                     	;# 
  1285  1FE8                     	;# 
  1286  1FE9                     	;# 
  1287  1FEA                     	;# 
  1288  1FEA                     	;# 
  1289  1FEB                     	;# 
  1290  1FED                     	;# 
  1291  1FEE                     	;# 
  1292  1FEF                     	;# 
  1293  0000                     	;# 
  1294  0001                     	;# 
  1295  0002                     	;# 
  1296  0003                     	;# 
  1297  0004                     	;# 
  1298  0005                     	;# 
  1299  0006                     	;# 
  1300  0007                     	;# 
  1301  0008                     	;# 
  1302  0009                     	;# 
  1303  000A                     	;# 
  1304  000B                     	;# 
  1305  000C                     	;# 
  1306  000E                     	;# 
  1307  0012                     	;# 
  1308  0014                     	;# 
  1309  0018                     	;# 
  1310  001A                     	;# 
  1311  009B                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  009F                     	;# 
  1317  0119                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  011A                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011B                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011C                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011D                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011F                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  018C                     	;# 
  1343  018D                     	;# 
  1344  018E                     	;# 
  1345  018F                     	;# 
  1346  0190                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  020C                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  020F                     	;# 
  1354  020F                     	;# 
  1355  0210                     	;# 
  1356  0210                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  028C                     	;# 
  1360  028C                     	;# 
  1361  028D                     	;# 
  1362  028D                     	;# 
  1363  028E                     	;# 
  1364  028F                     	;# 
  1365  0290                     	;# 
  1366  0291                     	;# 
  1367  030C                     	;# 
  1368  030C                     	;# 
  1369  030D                     	;# 
  1370  030E                     	;# 
  1371  030F                     	;# 
  1372  0310                     	;# 
  1373  0310                     	;# 
  1374  0311                     	;# 
  1375  0312                     	;# 
  1376  0313                     	;# 
  1377  0314                     	;# 
  1378  0314                     	;# 
  1379  0315                     	;# 
  1380  0316                     	;# 
  1381  0318                     	;# 
  1382  0318                     	;# 
  1383  0319                     	;# 
  1384  031A                     	;# 
  1385  031C                     	;# 
  1386  031C                     	;# 
  1387  031D                     	;# 
  1388  031E                     	;# 
  1389  038C                     	;# 
  1390  038C                     	;# 
  1391  038D                     	;# 
  1392  038E                     	;# 
  1393  058C                     	;# 
  1394  058C                     	;# 
  1395  058D                     	;# 
  1396  058E                     	;# 
  1397  058F                     	;# 
  1398  058F                     	;# 
  1399  0590                     	;# 
  1400  0591                     	;# 
  1401  0592                     	;# 
  1402  0593                     	;# 
  1403  059C                     	;# 
  1404  059C                     	;# 
  1405  059D                     	;# 
  1406  059D                     	;# 
  1407  059E                     	;# 
  1408  059F                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  070C                     	;# 
  1419  070D                     	;# 
  1420  070E                     	;# 
  1421  070F                     	;# 
  1422  0710                     	;# 
  1423  0711                     	;# 
  1424  0712                     	;# 
  1425  0713                     	;# 
  1426  0716                     	;# 
  1427  0717                     	;# 
  1428  0718                     	;# 
  1429  0719                     	;# 
  1430  071A                     	;# 
  1431  071B                     	;# 
  1432  071C                     	;# 
  1433  071D                     	;# 
  1434  0796                     	;# 
  1435  0797                     	;# 
  1436  0798                     	;# 
  1437  0799                     	;# 
  1438  079A                     	;# 
  1439  079B                     	;# 
  1440  080C                     	;# 
  1441  080D                     	;# 
  1442  080E                     	;# 
  1443  080F                     	;# 
  1444  0810                     	;# 
  1445  0811                     	;# 
  1446  0812                     	;# 
  1447  0813                     	;# 
  1448  0814                     	;# 
  1449  081A                     	;# 
  1450  081A                     	;# 
  1451  081B                     	;# 
  1452  081C                     	;# 
  1453  081C                     	;# 
  1454  081D                     	;# 
  1455  081E                     	;# 
  1456  081F                     	;# 
  1457  088C                     	;# 
  1458  088D                     	;# 
  1459  088E                     	;# 
  1460  088F                     	;# 
  1461  0890                     	;# 
  1462  0891                     	;# 
  1463  0892                     	;# 
  1464  0893                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  090C                     	;# 
  1468  090E                     	;# 
  1469  090F                     	;# 
  1470  091F                     	;# 
  1471  098F                     	;# 
  1472  098F                     	;# 
  1473  0990                     	;# 
  1474  0991                     	;# 
  1475  0992                     	;# 
  1476  0993                     	;# 
  1477  0994                     	;# 
  1478  0995                     	;# 
  1479  0996                     	;# 
  1480  0997                     	;# 
  1481  0A19                     	;# 
  1482  0A19                     	;# 
  1483  0A1A                     	;# 
  1484  0A1A                     	;# 
  1485  0A1B                     	;# 
  1486  0A1B                     	;# 
  1487  0A1B                     	;# 
  1488  0A1C                     	;# 
  1489  0A1C                     	;# 
  1490  0A1D                     	;# 
  1491  0A1D                     	;# 
  1492  0A1E                     	;# 
  1493  0A1E                     	;# 
  1494  0A1F                     	;# 
  1495  0A1F                     	;# 
  1496  0A1F                     	;# 
  1497  1E0F                     	;# 
  1498  1E10                     	;# 
  1499  1E11                     	;# 
  1500  1E12                     	;# 
  1501  1E13                     	;# 
  1502  1E14                     	;# 
  1503  1E15                     	;# 
  1504  1E16                     	;# 
  1505  1E17                     	;# 
  1506  1E18                     	;# 
  1507  1E19                     	;# 
  1508  1E1A                     	;# 
  1509  1E1B                     	;# 
  1510  1E1C                     	;# 
  1511  1E1D                     	;# 
  1512  1E1E                     	;# 
  1513  1E1F                     	;# 
  1514  1E20                     	;# 
  1515  1E21                     	;# 
  1516  1E22                     	;# 
  1517  1E23                     	;# 
  1518  1E24                     	;# 
  1519  1E25                     	;# 
  1520  1E26                     	;# 
  1521  1E27                     	;# 
  1522  1E28                     	;# 
  1523  1E29                     	;# 
  1524  1E2A                     	;# 
  1525  1E2B                     	;# 
  1526  1E2C                     	;# 
  1527  1E2D                     	;# 
  1528  1E2E                     	;# 
  1529  1E2F                     	;# 
  1530  1E30                     	;# 
  1531  1E31                     	;# 
  1532  1E32                     	;# 
  1533  1E33                     	;# 
  1534  1E34                     	;# 
  1535  1E35                     	;# 
  1536  1E36                     	;# 
  1537  1E37                     	;# 
  1538  1E8F                     	;# 
  1539  1E90                     	;# 
  1540  1E91                     	;# 
  1541  1E92                     	;# 
  1542  1E93                     	;# 
  1543  1E9C                     	;# 
  1544  1EA1                     	;# 
  1545  1EA2                     	;# 
  1546  1EB1                     	;# 
  1547  1EBB                     	;# 
  1548  1EBC                     	;# 
  1549  1EBD                     	;# 
  1550  1EBE                     	;# 
  1551  1EC3                     	;# 
  1552  1EC5                     	;# 
  1553  1EC6                     	;# 
  1554  1EC7                     	;# 
  1555  1ECB                     	;# 
  1556  1ECC                     	;# 
  1557  1ECD                     	;# 
  1558  1ECE                     	;# 
  1559  1F10                     	;# 
  1560  1F11                     	;# 
  1561  1F12                     	;# 
  1562  1F13                     	;# 
  1563  1F14                     	;# 
  1564  1F15                     	;# 
  1565  1F20                     	;# 
  1566  1F21                     	;# 
  1567  1F22                     	;# 
  1568  1F23                     	;# 
  1569  1F24                     	;# 
  1570  1F25                     	;# 
  1571  1F38                     	;# 
  1572  1F39                     	;# 
  1573  1F3A                     	;# 
  1574  1F3B                     	;# 
  1575  1F3C                     	;# 
  1576  1F3D                     	;# 
  1577  1F3E                     	;# 
  1578  1F3F                     	;# 
  1579  1F4E                     	;# 
  1580  1F4F                     	;# 
  1581  1F50                     	;# 
  1582  1F51                     	;# 
  1583  1F52                     	;# 
  1584  1F53                     	;# 
  1585  1F54                     	;# 
  1586  1F55                     	;# 
  1587  1FE4                     	;# 
  1588  1FE5                     	;# 
  1589  1FE6                     	;# 
  1590  1FE7                     	;# 
  1591  1FE8                     	;# 
  1592  1FE8                     	;# 
  1593  1FE9                     	;# 
  1594  1FEA                     	;# 
  1595  1FEA                     	;# 
  1596  1FEB                     	;# 
  1597  1FED                     	;# 
  1598  1FEE                     	;# 
  1599  1FEF                     	;# 
  1600  0000                     	;# 
  1601  0001                     	;# 
  1602  0002                     	;# 
  1603  0003                     	;# 
  1604  0004                     	;# 
  1605  0005                     	;# 
  1606  0006                     	;# 
  1607  0007                     	;# 
  1608  0008                     	;# 
  1609  0009                     	;# 
  1610  000A                     	;# 
  1611  000B                     	;# 
  1612  000C                     	;# 
  1613  000E                     	;# 
  1614  0012                     	;# 
  1615  0014                     	;# 
  1616  0018                     	;# 
  1617  001A                     	;# 
  1618  009B                     	;# 
  1619  009B                     	;# 
  1620  009C                     	;# 
  1621  009D                     	;# 
  1622  009E                     	;# 
  1623  009F                     	;# 
  1624  0119                     	;# 
  1625  0119                     	;# 
  1626  0119                     	;# 
  1627  011A                     	;# 
  1628  011A                     	;# 
  1629  011A                     	;# 
  1630  011B                     	;# 
  1631  011B                     	;# 
  1632  011B                     	;# 
  1633  011B                     	;# 
  1634  011B                     	;# 
  1635  011C                     	;# 
  1636  011C                     	;# 
  1637  011C                     	;# 
  1638  011D                     	;# 
  1639  011D                     	;# 
  1640  011D                     	;# 
  1641  011E                     	;# 
  1642  011E                     	;# 
  1643  011E                     	;# 
  1644  011F                     	;# 
  1645  011F                     	;# 
  1646  011F                     	;# 
  1647  011F                     	;# 
  1648  011F                     	;# 
  1649  018C                     	;# 
  1650  018D                     	;# 
  1651  018E                     	;# 
  1652  018F                     	;# 
  1653  0190                     	;# 
  1654  0191                     	;# 
  1655  0192                     	;# 
  1656  020C                     	;# 
  1657  020C                     	;# 
  1658  020D                     	;# 
  1659  020E                     	;# 
  1660  020F                     	;# 
  1661  020F                     	;# 
  1662  0210                     	;# 
  1663  0210                     	;# 
  1664  0211                     	;# 
  1665  0211                     	;# 
  1666  028C                     	;# 
  1667  028C                     	;# 
  1668  028D                     	;# 
  1669  028D                     	;# 
  1670  028E                     	;# 
  1671  028F                     	;# 
  1672  0290                     	;# 
  1673  0291                     	;# 
  1674  030C                     	;# 
  1675  030C                     	;# 
  1676  030D                     	;# 
  1677  030E                     	;# 
  1678  030F                     	;# 
  1679  0310                     	;# 
  1680  0310                     	;# 
  1681  0311                     	;# 
  1682  0312                     	;# 
  1683  0313                     	;# 
  1684  0314                     	;# 
  1685  0314                     	;# 
  1686  0315                     	;# 
  1687  0316                     	;# 
  1688  0318                     	;# 
  1689  0318                     	;# 
  1690  0319                     	;# 
  1691  031A                     	;# 
  1692  031C                     	;# 
  1693  031C                     	;# 
  1694  031D                     	;# 
  1695  031E                     	;# 
  1696  038C                     	;# 
  1697  038C                     	;# 
  1698  038D                     	;# 
  1699  038E                     	;# 
  1700  058C                     	;# 
  1701  058C                     	;# 
  1702  058D                     	;# 
  1703  058E                     	;# 
  1704  058F                     	;# 
  1705  058F                     	;# 
  1706  0590                     	;# 
  1707  0591                     	;# 
  1708  0592                     	;# 
  1709  0593                     	;# 
  1710  059C                     	;# 
  1711  059C                     	;# 
  1712  059D                     	;# 
  1713  059D                     	;# 
  1714  059E                     	;# 
  1715  059F                     	;# 
  1716  060C                     	;# 
  1717  060D                     	;# 
  1718  060E                     	;# 
  1719  060F                     	;# 
  1720  0610                     	;# 
  1721  0611                     	;# 
  1722  0612                     	;# 
  1723  0613                     	;# 
  1724  0614                     	;# 
  1725  070C                     	;# 
  1726  070D                     	;# 
  1727  070E                     	;# 
  1728  070F                     	;# 
  1729  0710                     	;# 
  1730  0711                     	;# 
  1731  0712                     	;# 
  1732  0713                     	;# 
  1733  0716                     	;# 
  1734  0717                     	;# 
  1735  0718                     	;# 
  1736  0719                     	;# 
  1737  071A                     	;# 
  1738  071B                     	;# 
  1739  071C                     	;# 
  1740  071D                     	;# 
  1741  0796                     	;# 
  1742  0797                     	;# 
  1743  0798                     	;# 
  1744  0799                     	;# 
  1745  079A                     	;# 
  1746  079B                     	;# 
  1747  080C                     	;# 
  1748  080D                     	;# 
  1749  080E                     	;# 
  1750  080F                     	;# 
  1751  0810                     	;# 
  1752  0811                     	;# 
  1753  0812                     	;# 
  1754  0813                     	;# 
  1755  0814                     	;# 
  1756  081A                     	;# 
  1757  081A                     	;# 
  1758  081B                     	;# 
  1759  081C                     	;# 
  1760  081C                     	;# 
  1761  081D                     	;# 
  1762  081E                     	;# 
  1763  081F                     	;# 
  1764  088C                     	;# 
  1765  088D                     	;# 
  1766  088E                     	;# 
  1767  088F                     	;# 
  1768  0890                     	;# 
  1769  0891                     	;# 
  1770  0892                     	;# 
  1771  0893                     	;# 
  1772  0895                     	;# 
  1773  0896                     	;# 
  1774  090C                     	;# 
  1775  090E                     	;# 
  1776  090F                     	;# 
  1777  091F                     	;# 
  1778  098F                     	;# 
  1779  098F                     	;# 
  1780  0990                     	;# 
  1781  0991                     	;# 
  1782  0992                     	;# 
  1783  0993                     	;# 
  1784  0994                     	;# 
  1785  0995                     	;# 
  1786  0996                     	;# 
  1787  0997                     	;# 
  1788  0A19                     	;# 
  1789  0A19                     	;# 
  1790  0A1A                     	;# 
  1791  0A1A                     	;# 
  1792  0A1B                     	;# 
  1793  0A1B                     	;# 
  1794  0A1B                     	;# 
  1795  0A1C                     	;# 
  1796  0A1C                     	;# 
  1797  0A1D                     	;# 
  1798  0A1D                     	;# 
  1799  0A1E                     	;# 
  1800  0A1E                     	;# 
  1801  0A1F                     	;# 
  1802  0A1F                     	;# 
  1803  0A1F                     	;# 
  1804  1E0F                     	;# 
  1805  1E10                     	;# 
  1806  1E11                     	;# 
  1807  1E12                     	;# 
  1808  1E13                     	;# 
  1809  1E14                     	;# 
  1810  1E15                     	;# 
  1811  1E16                     	;# 
  1812  1E17                     	;# 
  1813  1E18                     	;# 
  1814  1E19                     	;# 
  1815  1E1A                     	;# 
  1816  1E1B                     	;# 
  1817  1E1C                     	;# 
  1818  1E1D                     	;# 
  1819  1E1E                     	;# 
  1820  1E1F                     	;# 
  1821  1E20                     	;# 
  1822  1E21                     	;# 
  1823  1E22                     	;# 
  1824  1E23                     	;# 
  1825  1E24                     	;# 
  1826  1E25                     	;# 
  1827  1E26                     	;# 
  1828  1E27                     	;# 
  1829  1E28                     	;# 
  1830  1E29                     	;# 
  1831  1E2A                     	;# 
  1832  1E2B                     	;# 
  1833  1E2C                     	;# 
  1834  1E2D                     	;# 
  1835  1E2E                     	;# 
  1836  1E2F                     	;# 
  1837  1E30                     	;# 
  1838  1E31                     	;# 
  1839  1E32                     	;# 
  1840  1E33                     	;# 
  1841  1E34                     	;# 
  1842  1E35                     	;# 
  1843  1E36                     	;# 
  1844  1E37                     	;# 
  1845  1E8F                     	;# 
  1846  1E90                     	;# 
  1847  1E91                     	;# 
  1848  1E92                     	;# 
  1849  1E93                     	;# 
  1850  1E9C                     	;# 
  1851  1EA1                     	;# 
  1852  1EA2                     	;# 
  1853  1EB1                     	;# 
  1854  1EBB                     	;# 
  1855  1EBC                     	;# 
  1856  1EBD                     	;# 
  1857  1EBE                     	;# 
  1858  1EC3                     	;# 
  1859  1EC5                     	;# 
  1860  1EC6                     	;# 
  1861  1EC7                     	;# 
  1862  1ECB                     	;# 
  1863  1ECC                     	;# 
  1864  1ECD                     	;# 
  1865  1ECE                     	;# 
  1866  1F10                     	;# 
  1867  1F11                     	;# 
  1868  1F12                     	;# 
  1869  1F13                     	;# 
  1870  1F14                     	;# 
  1871  1F15                     	;# 
  1872  1F20                     	;# 
  1873  1F21                     	;# 
  1874  1F22                     	;# 
  1875  1F23                     	;# 
  1876  1F24                     	;# 
  1877  1F25                     	;# 
  1878  1F38                     	;# 
  1879  1F39                     	;# 
  1880  1F3A                     	;# 
  1881  1F3B                     	;# 
  1882  1F3C                     	;# 
  1883  1F3D                     	;# 
  1884  1F3E                     	;# 
  1885  1F3F                     	;# 
  1886  1F4E                     	;# 
  1887  1F4F                     	;# 
  1888  1F50                     	;# 
  1889  1F51                     	;# 
  1890  1F52                     	;# 
  1891  1F53                     	;# 
  1892  1F54                     	;# 
  1893  1F55                     	;# 
  1894  1FE4                     	;# 
  1895  1FE5                     	;# 
  1896  1FE6                     	;# 
  1897  1FE7                     	;# 
  1898  1FE8                     	;# 
  1899  1FE8                     	;# 
  1900  1FE9                     	;# 
  1901  1FEA                     	;# 
  1902  1FEA                     	;# 
  1903  1FEB                     	;# 
  1904  1FED                     	;# 
  1905  1FEE                     	;# 
  1906  1FEF                     	;# 
  1907                           
  1908                           	psect	idataBANK0
  1909  049B                     __pidataBANK0:	
  1910                           
  1911                           ;initializer for _volume_hp_prev
  1912  049B  340A               	retlw	10
  1913                           
  1914                           ;initializer for _volume_hp
  1915  049C  340A               	retlw	10
  1916                           
  1917                           ;initializer for _volume_sp_prev
  1918  049D  340A               	retlw	10
  1919                           
  1920                           ;initializer for _volume_sp
  1921  049E  340A               	retlw	10
  1922  0014                     _TRISCbits	set	20
  1923  000B                     _INTCONbits	set	11
  1924  0014                     _TRISC	set	20
  1925  0012                     _TRISA	set	18
  1926  0070                     _RC0	set	112
  1927  0071                     _RC1	set	113
  1928  0064                     _RA4	set	100
  1929  0065                     _RA5	set	101
  1930  0072                     _RC2	set	114
  1931  0074                     _RC4	set	116
  1932  018C                     _SSP1BUF	set	396
  1933  0191                     _SSP1CON2bits	set	401
  1934  018F                     _SSP1STAT	set	399
  1935  018D                     _SSP1ADD	set	397
  1936  0191                     _SSP1CON2	set	401
  1937  0190                     _SSP1CON1	set	400
  1938  020C                     _TMR1	set	524
  1939  0211                     _T1CLK	set	529
  1940  020F                     _T1GCONbits	set	527
  1941  020E                     _T1CONbits	set	526
  1942  071A                     _PIE4bits	set	1818
  1943  3880                     _TMR1IF	set	14464
  1944  1E8F                     _PPSLOCK	set	7823
  1945  1EC5                     _SSP1CLKPPS	set	7877
  1946  1EC6                     _SSP1DATPPS	set	7878
  1947  1F20                     _RC0PPS	set	7968
  1948  1F21                     _RC1PPS	set	7969
  1949  1F4F                     _WPUC	set	8015
  1950  1F39                     _WPUA	set	7993
  1951  1F4E                     _ANSELC	set	8014
  1952  1F38                     _ANSELA	set	7992
  1953                           
  1954                           ; #config settings
  1955  0000                     
  1956                           	psect	cinit
  1957  001E                     start_initialization:	
  1958  001E                     __initialization:	
  1959                           
  1960                           ; Initialize objects allocated to BANK0
  1961  001E  3184  249B  3180   	fcall	__pidataBANK0	;fetch initializer
  1962  0021  00C7               	movwf	__pdataBANK0& (0+127)
  1963  0022  3184  249C  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1964  0025  00C8               	movwf	(__pdataBANK0+1)& (0+127)
  1965  0026  3184  249D  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1966  0029  00C9               	movwf	(__pdataBANK0+2)& (0+127)
  1967  002A  3184  249E  3180   	fcall	__pidataBANK0+3	;fetch initializer
  1968  002D  00CA               	movwf	(__pdataBANK0+3)& (0+127)
  1969                           
  1970                           ; Clear objects allocated to BANK0
  1971  002E  3020               	movlw	low __pbssBANK0
  1972  002F  0084               	movwf	4
  1973  0030  3000               	movlw	high __pbssBANK0
  1974  0031  0085               	movwf	5
  1975  0032  301D               	movlw	29
  1976  0033  3184  2489  3180   	fcall	clear_ram0
  1977  0036                     end_of_initialization:	
  1978                           ;End of C runtime variable initialization code
  1979                           
  1980  0036                     __end_of__initialization:	
  1981  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1982  0037  0140               	movlb	0
  1983  0038  3180  283A         	ljmp	_main	;jump to C main() function
  1984                           
  1985                           	psect	bssBANK0
  1986  0020                     __pbssBANK0:	
  1987  0020                     _vol_minus_time_hold:	
  1988  0020                     	ds	4
  1989  0024                     _vol_minus_time_start:	
  1990  0024                     	ds	4
  1991  0028                     _vol_plus_time_hold:	
  1992  0028                     	ds	4
  1993  002C                     _vol_plus_time_start:	
  1994  002C                     	ds	4
  1995  0030                     _HPS_time_start:	
  1996  0030                     	ds	4
  1997  0034                     _timer_counter:	
  1998  0034                     	ds	4
  1999  0038                     _vol_minus_state:	
  2000  0038                     	ds	1
  2001  0039                     _vol_plus_state:	
  2002  0039                     	ds	1
  2003  003A                     _HPS_state:	
  2004  003A                     	ds	1
  2005  003B                     _mute_state:	
  2006  003B                     	ds	1
  2007  003C                     _mute_config:	
  2008  003C                     	ds	1
  2009                           
  2010                           	psect	dataBANK0
  2011  0047                     __pdataBANK0:	
  2012  0047                     _volume_hp_prev:	
  2013  0047                     	ds	1
  2014  0048                     _volume_hp:	
  2015  0048                     	ds	1
  2016  0049                     _volume_sp_prev:	
  2017  0049                     	ds	1
  2018  004A                     _volume_sp:	
  2019  004A                     	ds	1
  2020                           
  2021                           	psect	clrtext
  2022  0489                     clear_ram0:	
  2023                           ;	Called with FSR0 containing the base address, and
  2024                           ;	WREG with the size to clear
  2025                           
  2026  0489  0064               	clrwdt	;clear the watchdog before getting into this loop
  2027  048A                     clrloop0:	
  2028  048A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2029  048B  3101               	addfsr 0,1
  2030  048C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2031  048D  2C8A               	goto	clrloop0	;have we reached the end yet?
  2032  048E  3400               	retlw	0	;all done for this memory range, return
  2033                           
  2034                           	psect	cstackCOMMON
  2035  0070                     __pcstackCOMMON:	
  2036  0070                     ?_PPS_unlock:	
  2037  0070                     ??_PPS_unlock:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ?_PPS_lock:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ??_PPS_lock:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ?_CS2300CP_init:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ?_LM49450_N64_init:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ?_LM49450_analog_init:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_PIC_SETUP:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ??_PIC_SETUP:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?_ISR:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ??_ISR:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ?_main:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_I2C_Master_Wait:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ??_I2C_Master_Wait:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_I2C_Master_Start:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ??_I2C_Master_Start:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_I2C_Master_Stop:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ??_I2C_Master_Stop:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_I2C_Master_Write:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ??_I2C_Master_Write:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_get_time:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ?_timer_diff:	
  2098                           ; 4 bytes @ 0x0
  2099                           
  2100  0070                     ?___lldiv:	
  2101                           ; 4 bytes @ 0x0
  2102                           
  2103  0070                     I2C_Master_Write@data:	
  2104                           ; 4 bytes @ 0x0
  2105                           
  2106  0070                     timer_diff@t:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ___lldiv@divisor:	
  2110                           ; 4 bytes @ 0x0
  2111                           
  2112                           
  2113                           ; 4 bytes @ 0x0
  2114  0070                     	ds	1
  2115  0071                     ?_LM49450_write:	
  2116  0071                     ?_CS2300CP_write:	
  2117                           ; 1 bytes @ 0x1
  2118                           
  2119  0071                     LM49450_write@data:	
  2120                           ; 1 bytes @ 0x1
  2121                           
  2122  0071                     CS2300CP_write@data:	
  2123                           ; 1 bytes @ 0x1
  2124                           
  2125                           
  2126                           ; 1 bytes @ 0x1
  2127  0071                     	ds	1
  2128  0072                     ??_LM49450_write:	
  2129  0072                     ??_CS2300CP_write:	
  2130                           ; 1 bytes @ 0x2
  2131                           
  2132  0072                     LM49450_write@reg:	
  2133                           ; 1 bytes @ 0x2
  2134                           
  2135  0072                     CS2300CP_write@reg:	
  2136                           ; 1 bytes @ 0x2
  2137                           
  2138                           
  2139                           ; 1 bytes @ 0x2
  2140  0072                     	ds	1
  2141  0073                     ??_CS2300CP_init:	
  2142  0073                     ??_LM49450_N64_init:	
  2143                           ; 1 bytes @ 0x3
  2144                           
  2145  0073                     ??_LM49450_analog_init:	
  2146                           ; 1 bytes @ 0x3
  2147                           
  2148                           
  2149                           ; 1 bytes @ 0x3
  2150  0073                     	ds	1
  2151  0074                     ??_get_time:	
  2152  0074                     ??_timer_diff:	
  2153                           ; 1 bytes @ 0x4
  2154                           
  2155  0074                     ___lldiv@dividend:	
  2156                           ; 1 bytes @ 0x4
  2157                           
  2158                           
  2159                           ; 4 bytes @ 0x4
  2160  0074                     	ds	4
  2161  0078                     ??___lldiv:	
  2162                           
  2163                           ; 1 bytes @ 0x8
  2164  0078                     	ds	1
  2165  0079                     ___lldiv@quotient:	
  2166                           
  2167                           ; 4 bytes @ 0x9
  2168  0079                     	ds	4
  2169  007D                     ___lldiv@counter:	
  2170                           
  2171                           ; 1 bytes @ 0xD
  2172  007D                     	ds	1
  2173                           
  2174                           	psect	cstackBANK0
  2175  003D                     __pcstackBANK0:	
  2176  003D                     ?_I2C_Master_Init:	
  2177  003D                     I2C_Master_Init@clk:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180                           
  2181                           ; 4 bytes @ 0x0
  2182  003D                     	ds	4
  2183  0041                     ??_I2C_Master_Init:	
  2184                           
  2185                           ; 1 bytes @ 0x4
  2186  0041                     	ds	4
  2187  0045                     ??_main:	
  2188                           
  2189                           ; 1 bytes @ 0x8
  2190  0045                     	ds	2
  2191                           
  2192                           	psect	maintext
  2193  003A                     __pmaintext:	
  2194 ;;
  2195 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2196 ;;
  2197 ;; *************** function _main *****************
  2198 ;; Defined at:
  2199 ;;		line 76 in file "main.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : B3F/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2213 ;;      Params:         0       0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0
  2215 ;;      Temps:          0       2       0       0       0       0       0       0
  2216 ;;      Totals:         0       2       0       0       0       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels required when called:    5
  2219 ;; This function calls:
  2220 ;;		_CS2300CP_init
  2221 ;;		_I2C_Master_Init
  2222 ;;		_LM49450_N64_init
  2223 ;;		_LM49450_analog_init
  2224 ;;		_LM49450_write
  2225 ;;		_PIC_SETUP
  2226 ;;		_PPS_lock
  2227 ;;		_PPS_unlock
  2228 ;;		_get_time
  2229 ;;		_timer_diff
  2230 ;; This function is called by:
  2231 ;;		Startup code after reset
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _main
  2237  003A                     _main:	
  2238  003A                     l1405:	
  2239                           ;incstack = 0
  2240                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2241                           
  2242                           
  2243                           ;main.c: 78: PIC_SETUP();
  2244  003A  3183  23F5  3180   	fcall	_PIC_SETUP
  2245                           
  2246                           ;main.c: 81: PPS_unlock();
  2247  003D  3184  2482  3180   	fcall	_PPS_unlock
  2248  0040                     l1407:	
  2249                           
  2250                           ;main.c: 82: SSP1DATPPS = 0x11;
  2251  0040  3011               	movlw	17
  2252  0041  017D               	movlb	61	; select bank61
  2253  0042  00C6               	movwf	70	;volatile
  2254  0043                     l1409:	
  2255                           
  2256                           ;main.c: 83: RC1PPS = 0x16;
  2257  0043  3016               	movlw	22
  2258  0044  017E               	movlb	62	; select bank62
  2259  0045  00A1               	movwf	33	;volatile
  2260  0046                     l1411:	
  2261                           
  2262                           ;main.c: 84: SSP1CLKPPS = 0x10;
  2263  0046  3010               	movlw	16
  2264  0047  017D               	movlb	61	; select bank61
  2265  0048  00C5               	movwf	69	;volatile
  2266  0049                     l1413:	
  2267                           
  2268                           ;main.c: 85: RC0PPS = 0x15;
  2269  0049  3015               	movlw	21
  2270  004A  017E               	movlb	62	; select bank62
  2271  004B  00A0               	movwf	32	;volatile
  2272                           
  2273                           ;main.c: 86: PPS_lock();
  2274  004C  3184  2472  3180   	fcall	_PPS_lock
  2275                           
  2276                           ;main.c: 87: I2C_Master_Init(100000);
  2277  004F  3000               	movlw	0
  2278  0050  0140               	movlb	0	; select bank0
  2279  0051  00C0               	movwf	I2C_Master_Init@clk+3
  2280  0052  3001               	movlw	1
  2281  0053  00BF               	movwf	I2C_Master_Init@clk+2
  2282  0054  3086               	movlw	134
  2283  0055  00BE               	movwf	I2C_Master_Init@clk+1
  2284  0056  30A0               	movlw	160
  2285  0057  00BD               	movwf	I2C_Master_Init@clk
  2286  0058  3183  23A0  3180   	fcall	_I2C_Master_Init
  2287  005B                     l1415:	
  2288                           
  2289                           ;main.c: 90: _delay((unsigned long)((50)*(32000000/4000.0)));
  2290  005B  3003               	movlw	3
  2291  005C  0140               	movlb	0	; select bank0
  2292  005D  00C6               	movwf	??_main+1
  2293  005E  3008               	movlw	8
  2294  005F  00C5               	movwf	??_main
  2295  0060  3077               	movlw	119
  2296  0061                     u1217:	
  2297  0061  0B89               	decfsz	9,f
  2298  0062  2861               	goto	u1217
  2299  0063  0BC5               	decfsz	??_main,f
  2300  0064  2861               	goto	u1217
  2301  0065  0BC6               	decfsz	??_main+1,f
  2302  0066  2861               	goto	u1217
  2303  0067                     l1417:	
  2304                           
  2305                           ;main.c: 93: if(RC4) {
  2306  0067  0140               	movlb	0	; select bank0
  2307  0068  1E0E               	btfss	14,4	;volatile
  2308  0069  286B               	goto	u741
  2309  006A  286C               	goto	u740
  2310  006B                     u741:	
  2311  006B  2877               	goto	l1421
  2312  006C                     u740:	
  2313  006C                     l1419:	
  2314                           
  2315                           ;main.c: 94: CS2300CP_init();
  2316  006C  3183  2364  3180   	fcall	_CS2300CP_init
  2317                           
  2318                           ;main.c: 95: mute_config = LM49450_N64_init();
  2319  006F  3183  23CE  3180   	fcall	_LM49450_N64_init
  2320  0072  0140               	movlb	0	; select bank0
  2321  0073  00C5               	movwf	??_main
  2322  0074  0845               	movf	??_main,w
  2323  0075  00BC               	movwf	_mute_config
  2324                           
  2325                           ;main.c: 96: }
  2326  0076  287E               	goto	l107
  2327  0077                     l1421:	
  2328                           
  2329                           ;main.c: 97: else {;main.c: 98: mute_config = LM49450_analog_init();
  2330  0077  3184  2468  3180   	fcall	_LM49450_analog_init
  2331  007A  0140               	movlb	0	; select bank0
  2332  007B  00C5               	movwf	??_main
  2333  007C  0845               	movf	??_main,w
  2334  007D  00BC               	movwf	_mute_config
  2335  007E                     l107:	
  2336                           
  2337                           ;main.c: 99: };main.c: 102: LM49450_write(0x08, volume_sp);
  2338  007E  084A               	movf	_volume_sp,w
  2339  007F  00C5               	movwf	??_main
  2340  0080  0845               	movf	??_main,w
  2341  0081  00F1               	movwf	LM49450_write@data
  2342  0082  3008               	movlw	8
  2343  0083  3184  242A  3180   	fcall	_LM49450_write
  2344                           
  2345                           ;main.c: 103: LM49450_write(0x07, volume_hp);
  2346  0086  0140               	movlb	0	; select bank0
  2347  0087  0848               	movf	_volume_hp,w
  2348  0088  00C5               	movwf	??_main
  2349  0089  0845               	movf	??_main,w
  2350  008A  00F1               	movwf	LM49450_write@data
  2351  008B  3007               	movlw	7
  2352  008C  3184  242A  3180   	fcall	_LM49450_write
  2353  008F                     l1423:	
  2354                           
  2355                           ;main.c: 108: if(RC2) {
  2356  008F  0140               	movlb	0	; select bank0
  2357  0090  1D0E               	btfss	14,2	;volatile
  2358  0091  2893               	goto	u751
  2359  0092  2894               	goto	u750
  2360  0093                     u751:	
  2361  0093  28E0               	goto	l1443
  2362  0094                     u750:	
  2363  0094                     l1425:	
  2364                           
  2365                           ;main.c: 109: if(HPS_state == 0) {
  2366  0094  083A               	movf	_HPS_state,w
  2367  0095  1D03               	btfss	3,2
  2368  0096  2898               	goto	u761
  2369  0097  2899               	goto	u760
  2370  0098                     u761:	
  2371  0098  28A8               	goto	l1431
  2372  0099                     u760:	
  2373  0099                     l1427:	
  2374                           
  2375                           ;main.c: 110: HPS_time_start = get_time();
  2376  0099  3184  245E  3180   	fcall	_get_time
  2377  009C  0873               	movf	?_get_time+3,w
  2378  009D  0140               	movlb	0	; select bank0
  2379  009E  00B3               	movwf	_HPS_time_start+3
  2380  009F  0872               	movf	?_get_time+2,w
  2381  00A0  00B2               	movwf	_HPS_time_start+2
  2382  00A1  0871               	movf	?_get_time+1,w
  2383  00A2  00B1               	movwf	_HPS_time_start+1
  2384  00A3  0870               	movf	?_get_time,w
  2385  00A4  00B0               	movwf	_HPS_time_start
  2386  00A5                     l1429:	
  2387                           
  2388                           ;main.c: 111: HPS_state = 1;
  2389  00A5  01BA               	clrf	_HPS_state
  2390  00A6  0ABA               	incf	_HPS_state,f
  2391                           
  2392                           ;main.c: 112: }
  2393  00A7  28FA               	goto	l1453
  2394  00A8                     l1431:	
  2395                           
  2396                           ;main.c: 113: else if(HPS_state == 1) {
  2397  00A8  033A               	decf	_HPS_state,w
  2398  00A9  1D03               	btfss	3,2
  2399  00AA  28AC               	goto	u771
  2400  00AB  28AD               	goto	u770
  2401  00AC                     u771:	
  2402  00AC  28FA               	goto	l1453
  2403  00AD                     u770:	
  2404  00AD                     l1433:	
  2405                           
  2406                           ;main.c: 114: if(timer_diff(HPS_time_start) >= 4) {
  2407  00AD  0833               	movf	_HPS_time_start+3,w
  2408  00AE  00F3               	movwf	timer_diff@t+3
  2409  00AF  0832               	movf	_HPS_time_start+2,w
  2410  00B0  00F2               	movwf	timer_diff@t+2
  2411  00B1  0831               	movf	_HPS_time_start+1,w
  2412  00B2  00F1               	movwf	timer_diff@t+1
  2413  00B3  0830               	movf	_HPS_time_start,w
  2414  00B4  00F0               	movwf	timer_diff@t
  2415  00B5  3184  2414  3180   	fcall	_timer_diff
  2416  00B8  0873               	movf	?_timer_diff+3,w
  2417  00B9  1D03               	btfss	3,2
  2418  00BA  28C7               	goto	u780
  2419  00BB  0872               	movf	?_timer_diff+2,w
  2420  00BC  1D03               	btfss	3,2
  2421  00BD  28C7               	goto	u780
  2422  00BE  0871               	movf	?_timer_diff+1,w
  2423  00BF  1D03               	btfss	3,2
  2424  00C0  28C7               	goto	u780
  2425  00C1  3004               	movlw	4
  2426  00C2  0270               	subwf	?_timer_diff,w
  2427  00C3  1C03               	btfss	3,0
  2428  00C4  28C6               	goto	u781
  2429  00C5  28C7               	goto	u780
  2430  00C6                     u781:	
  2431  00C6  28FA               	goto	l1453
  2432  00C7                     u780:	
  2433  00C7                     l1435:	
  2434                           
  2435                           ;main.c: 115: HPS_state = 2;
  2436  00C7  3002               	movlw	2
  2437  00C8  0140               	movlb	0	; select bank0
  2438  00C9  00C5               	movwf	??_main
  2439  00CA  0845               	movf	??_main,w
  2440  00CB  00BA               	movwf	_HPS_state
  2441  00CC                     l1437:	
  2442                           
  2443                           ;main.c: 116: if(volume_sp == 0 && mute_state == 0) {
  2444  00CC  084A               	movf	_volume_sp,w
  2445  00CD  1D03               	btfss	3,2
  2446  00CE  28D0               	goto	u791
  2447  00CF  28D1               	goto	u790
  2448  00D0                     u791:	
  2449  00D0  28DF               	goto	l111
  2450  00D1                     u790:	
  2451  00D1                     l1439:	
  2452  00D1  083B               	movf	_mute_state,w
  2453  00D2  1D03               	btfss	3,2
  2454  00D3  28D5               	goto	u801
  2455  00D4  28D6               	goto	u800
  2456  00D5                     u801:	
  2457  00D5  28DF               	goto	l111
  2458  00D6                     u800:	
  2459  00D6                     l1441:	
  2460                           
  2461                           ;main.c: 118: LM49450_write(0x00, mute_config);
  2462  00D6  083C               	movf	_mute_config,w
  2463  00D7  00C5               	movwf	??_main
  2464  00D8  0845               	movf	??_main,w
  2465  00D9  00F1               	movwf	LM49450_write@data
  2466  00DA  3000               	movlw	0
  2467  00DB  3184  242A  3180   	fcall	_LM49450_write
  2468  00DE  28FA               	goto	l1453
  2469  00DF                     l111:	
  2470                           
  2471                           ;main.c: 119: };main.c: 120: };main.c: 121: };main.c: 122: }
  2472  00DF  28FA               	goto	l1453
  2473  00E0                     l1443:	
  2474                           
  2475                           ;main.c: 123: else {;main.c: 124: if(HPS_state == 2) {
  2476  00E0  3002               	movlw	2
  2477  00E1  063A               	xorwf	_HPS_state,w
  2478  00E2  1D03               	btfss	3,2
  2479  00E3  28E5               	goto	u811
  2480  00E4  28E6               	goto	u810
  2481  00E5                     u811:	
  2482  00E5  28F8               	goto	l1451
  2483  00E6                     u810:	
  2484  00E6                     l1445:	
  2485                           
  2486                           ;main.c: 125: if(volume_hp == 0 && mute_state == 0) {
  2487  00E6  0848               	movf	_volume_hp,w
  2488  00E7  1D03               	btfss	3,2
  2489  00E8  28EA               	goto	u821
  2490  00E9  28EB               	goto	u820
  2491  00EA                     u821:	
  2492  00EA  28F8               	goto	l1451
  2493  00EB                     u820:	
  2494  00EB                     l1447:	
  2495  00EB  083B               	movf	_mute_state,w
  2496  00EC  1D03               	btfss	3,2
  2497  00ED  28EF               	goto	u831
  2498  00EE  28F0               	goto	u830
  2499  00EF                     u831:	
  2500  00EF  28F8               	goto	l1451
  2501  00F0                     u830:	
  2502  00F0                     l1449:	
  2503                           
  2504                           ;main.c: 127: LM49450_write(0x00, mute_config);
  2505  00F0  083C               	movf	_mute_config,w
  2506  00F1  00C5               	movwf	??_main
  2507  00F2  0845               	movf	??_main,w
  2508  00F3  00F1               	movwf	LM49450_write@data
  2509  00F4  3000               	movlw	0
  2510  00F5  3184  242A  3180   	fcall	_LM49450_write
  2511  00F8                     l1451:	
  2512                           
  2513                           ;main.c: 128: };main.c: 129: };main.c: 130: HPS_state = 0;
  2514  00F8  0140               	movlb	0	; select bank0
  2515  00F9  01BA               	clrf	_HPS_state
  2516  00FA                     l1453:	
  2517                           
  2518                           ;main.c: 131: };main.c: 133: if(!RA5) {
  2519  00FA  0140               	movlb	0	; select bank0
  2520  00FB  1A8C               	btfsc	12,5	;volatile
  2521  00FC  28FE               	goto	u841
  2522  00FD  28FF               	goto	u840
  2523  00FE                     u841:	
  2524  00FE  29A3               	goto	l1499
  2525  00FF                     u840:	
  2526  00FF  29A5               	goto	l1501
  2527  0100                     l1457:	
  2528                           
  2529                           ;main.c: 137: vol_plus_time_start = get_time();
  2530  0100  3184  245E  3180   	fcall	_get_time
  2531  0103  0873               	movf	?_get_time+3,w
  2532  0104  0140               	movlb	0	; select bank0
  2533  0105  00AF               	movwf	_vol_plus_time_start+3
  2534  0106  0872               	movf	?_get_time+2,w
  2535  0107  00AE               	movwf	_vol_plus_time_start+2
  2536  0108  0871               	movf	?_get_time+1,w
  2537  0109  00AD               	movwf	_vol_plus_time_start+1
  2538  010A  0870               	movf	?_get_time,w
  2539  010B  00AC               	movwf	_vol_plus_time_start
  2540  010C                     l1459:	
  2541                           
  2542                           ;main.c: 138: vol_plus_state = 1;
  2543  010C  01B9               	clrf	_vol_plus_state
  2544  010D  0AB9               	incf	_vol_plus_state,f
  2545                           
  2546                           ;main.c: 139: break;
  2547  010E  29B0               	goto	l1505
  2548  010F                     l1461:	
  2549                           
  2550                           ;main.c: 142: if(timer_diff(vol_plus_time_start) >= 4) {
  2551  010F  082F               	movf	_vol_plus_time_start+3,w
  2552  0110  00F3               	movwf	timer_diff@t+3
  2553  0111  082E               	movf	_vol_plus_time_start+2,w
  2554  0112  00F2               	movwf	timer_diff@t+2
  2555  0113  082D               	movf	_vol_plus_time_start+1,w
  2556  0114  00F1               	movwf	timer_diff@t+1
  2557  0115  082C               	movf	_vol_plus_time_start,w
  2558  0116  00F0               	movwf	timer_diff@t
  2559  0117  3184  2414  3180   	fcall	_timer_diff
  2560  011A  0873               	movf	?_timer_diff+3,w
  2561  011B  1D03               	btfss	3,2
  2562  011C  2929               	goto	u850
  2563  011D  0872               	movf	?_timer_diff+2,w
  2564  011E  1D03               	btfss	3,2
  2565  011F  2929               	goto	u850
  2566  0120  0871               	movf	?_timer_diff+1,w
  2567  0121  1D03               	btfss	3,2
  2568  0122  2929               	goto	u850
  2569  0123  3004               	movlw	4
  2570  0124  0270               	subwf	?_timer_diff,w
  2571  0125  1C03               	btfss	3,0
  2572  0126  2928               	goto	u851
  2573  0127  2929               	goto	u850
  2574  0128                     u851:	
  2575  0128  29B0               	goto	l1505
  2576  0129                     u850:	
  2577  0129                     l1463:	
  2578                           
  2579                           ;main.c: 143: vol_plus_time_hold = get_time();
  2580  0129  3184  245E  3180   	fcall	_get_time
  2581  012C  0873               	movf	?_get_time+3,w
  2582  012D  0140               	movlb	0	; select bank0
  2583  012E  00AB               	movwf	_vol_plus_time_hold+3
  2584  012F  0872               	movf	?_get_time+2,w
  2585  0130  00AA               	movwf	_vol_plus_time_hold+2
  2586  0131  0871               	movf	?_get_time+1,w
  2587  0132  00A9               	movwf	_vol_plus_time_hold+1
  2588  0133  0870               	movf	?_get_time,w
  2589  0134  00A8               	movwf	_vol_plus_time_hold
  2590  0135                     l1465:	
  2591                           
  2592                           ;main.c: 144: vol_plus_state = 2;
  2593  0135  3002               	movlw	2
  2594  0136  00C5               	movwf	??_main
  2595  0137  0845               	movf	??_main,w
  2596  0138  00B9               	movwf	_vol_plus_state
  2597  0139                     l1467:	
  2598                           
  2599                           ;main.c: 145: if(HPS_state == 2) {
  2600  0139  3002               	movlw	2
  2601  013A  063A               	xorwf	_HPS_state,w
  2602  013B  1D03               	btfss	3,2
  2603  013C  293E               	goto	u861
  2604  013D  293F               	goto	u860
  2605  013E                     u861:	
  2606  013E  294F               	goto	l1475
  2607  013F                     u860:	
  2608  013F                     l1469:	
  2609                           
  2610                           ;main.c: 146: if((volume_hp < 31) && mute_state == 0) volume_hp++;
  2611  013F  301F               	movlw	31
  2612  0140  0248               	subwf	_volume_hp,w
  2613  0141  1803               	skipnc
  2614  0142  2944               	goto	u871
  2615  0143  2945               	goto	u870
  2616  0144                     u871:	
  2617  0144  29B0               	goto	l121
  2618  0145                     u870:	
  2619  0145                     l1471:	
  2620  0145  083B               	movf	_mute_state,w
  2621  0146  1D03               	btfss	3,2
  2622  0147  2949               	goto	u881
  2623  0148  294A               	goto	u880
  2624  0149                     u881:	
  2625  0149  29B0               	goto	l121
  2626  014A                     u880:	
  2627  014A                     l1473:	
  2628  014A  3001               	movlw	1
  2629  014B  00C5               	movwf	??_main
  2630  014C  0845               	movf	??_main,w
  2631  014D  07C8               	addwf	_volume_hp,f
  2632  014E  29B0               	goto	l1505
  2633  014F                     l1475:	
  2634                           
  2635                           ;main.c: 148: else if((volume_sp < 31) && mute_state == 0) volume_sp++;
  2636  014F  301F               	movlw	31
  2637  0150  024A               	subwf	_volume_sp,w
  2638  0151  1803               	skipnc
  2639  0152  2954               	goto	u891
  2640  0153  2955               	goto	u890
  2641  0154                     u891:	
  2642  0154  29B0               	goto	l121
  2643  0155                     u890:	
  2644  0155                     l1477:	
  2645  0155  083B               	movf	_mute_state,w
  2646  0156  1D03               	btfss	3,2
  2647  0157  2959               	goto	u901
  2648  0158  295A               	goto	u900
  2649  0159                     u901:	
  2650  0159  29B0               	goto	l121
  2651  015A                     u900:	
  2652  015A                     l1479:	
  2653  015A  3001               	movlw	1
  2654  015B  00C5               	movwf	??_main
  2655  015C  0845               	movf	??_main,w
  2656  015D  07CA               	addwf	_volume_sp,f
  2657  015E  29B0               	goto	l1505
  2658  015F                     l1481:	
  2659                           
  2660                           ;main.c: 153: if(timer_diff(vol_plus_time_hold) >= 20) {
  2661  015F  082B               	movf	_vol_plus_time_hold+3,w
  2662  0160  00F3               	movwf	timer_diff@t+3
  2663  0161  082A               	movf	_vol_plus_time_hold+2,w
  2664  0162  00F2               	movwf	timer_diff@t+2
  2665  0163  0829               	movf	_vol_plus_time_hold+1,w
  2666  0164  00F1               	movwf	timer_diff@t+1
  2667  0165  0828               	movf	_vol_plus_time_hold,w
  2668  0166  00F0               	movwf	timer_diff@t
  2669  0167  3184  2414  3180   	fcall	_timer_diff
  2670  016A  0873               	movf	?_timer_diff+3,w
  2671  016B  1D03               	btfss	3,2
  2672  016C  2979               	goto	u910
  2673  016D  0872               	movf	?_timer_diff+2,w
  2674  016E  1D03               	btfss	3,2
  2675  016F  2979               	goto	u910
  2676  0170  0871               	movf	?_timer_diff+1,w
  2677  0171  1D03               	btfss	3,2
  2678  0172  2979               	goto	u910
  2679  0173  3014               	movlw	20
  2680  0174  0270               	subwf	?_timer_diff,w
  2681  0175  1C03               	btfss	3,0
  2682  0176  2978               	goto	u911
  2683  0177  2979               	goto	u910
  2684  0178                     u911:	
  2685  0178  29B0               	goto	l1505
  2686  0179                     u910:	
  2687  0179                     l1483:	
  2688                           
  2689                           ;main.c: 154: vol_plus_time_hold = get_time();
  2690  0179  3184  245E  3180   	fcall	_get_time
  2691  017C  0873               	movf	?_get_time+3,w
  2692  017D  0140               	movlb	0	; select bank0
  2693  017E  00AB               	movwf	_vol_plus_time_hold+3
  2694  017F  0872               	movf	?_get_time+2,w
  2695  0180  00AA               	movwf	_vol_plus_time_hold+2
  2696  0181  0871               	movf	?_get_time+1,w
  2697  0182  00A9               	movwf	_vol_plus_time_hold+1
  2698  0183  0870               	movf	?_get_time,w
  2699  0184  00A8               	movwf	_vol_plus_time_hold
  2700  0185                     l1485:	
  2701                           
  2702                           ;main.c: 155: if(HPS_state == 2) {
  2703  0185  3002               	movlw	2
  2704  0186  063A               	xorwf	_HPS_state,w
  2705  0187  1D03               	btfss	3,2
  2706  0188  298A               	goto	u921
  2707  0189  298B               	goto	u920
  2708  018A                     u921:	
  2709  018A  2997               	goto	l1493
  2710  018B                     u920:	
  2711  018B                     l1487:	
  2712                           
  2713                           ;main.c: 156: if((volume_hp < 31) && mute_state == 0) volume_hp++;
  2714  018B  301F               	movlw	31
  2715  018C  0248               	subwf	_volume_hp,w
  2716  018D  1803               	skipnc
  2717  018E  2990               	goto	u931
  2718  018F  2991               	goto	u930
  2719  0190                     u931:	
  2720  0190  29B0               	goto	l1505
  2721  0191                     u930:	
  2722  0191                     l1489:	
  2723  0191  083B               	movf	_mute_state,w
  2724  0192  1D03               	btfss	3,2
  2725  0193  2995               	goto	u941
  2726  0194  2996               	goto	u940
  2727  0195                     u941:	
  2728  0195  29B0               	goto	l1505
  2729  0196                     u940:	
  2730  0196  294A               	goto	l1473
  2731  0197                     l1493:	
  2732                           
  2733                           ;main.c: 158: else if((volume_sp < 31) && mute_state == 0) volume_sp++;
  2734  0197  301F               	movlw	31
  2735  0198  024A               	subwf	_volume_sp,w
  2736  0199  1803               	skipnc
  2737  019A  299C               	goto	u951
  2738  019B  299D               	goto	u950
  2739  019C                     u951:	
  2740  019C  29B0               	goto	l1505
  2741  019D                     u950:	
  2742  019D                     l1495:	
  2743  019D  083B               	movf	_mute_state,w
  2744  019E  1D03               	btfss	3,2
  2745  019F  29A1               	goto	u961
  2746  01A0  29A2               	goto	u960
  2747  01A1                     u961:	
  2748  01A1  29B0               	goto	l1505
  2749  01A2                     u960:	
  2750  01A2  295A               	goto	l1479
  2751  01A3                     l1499:	
  2752                           
  2753                           ;main.c: 162: vol_plus_state = 0;
  2754  01A3  01B9               	clrf	_vol_plus_state
  2755                           
  2756                           ;main.c: 163: }
  2757  01A4  29B0               	goto	l1505
  2758  01A5                     l1501:	
  2759  01A5  0839               	movf	_vol_plus_state,w
  2760                           
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 3, Range of values is 0 to 2
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte           10     6 (average)
  2766                           ; direct_byte           12     6 (fixed)
  2767                           ; jumptable            260     6 (fixed)
  2768                           ;	Chosen strategy is simple_byte
  2769  01A6  3A00               	xorlw	0	; case 0
  2770  01A7  1903               	skipnz
  2771  01A8  2900               	goto	l1457
  2772  01A9  3A01               	xorlw	1	; case 1
  2773  01AA  1903               	skipnz
  2774  01AB  290F               	goto	l1461
  2775  01AC  3A03               	xorlw	3	; case 2
  2776  01AD  1903               	skipnz
  2777  01AE  295F               	goto	l1481
  2778  01AF  29A3               	goto	l1499
  2779  01B0                     l121:	
  2780  01B0                     l1505:	
  2781                           ;main.c: 164: }
  2782                           
  2783                           
  2784                           ;main.c: 167: };main.c: 169: if(!RA4) {
  2785  01B0  0140               	movlb	0	; select bank0
  2786  01B1  1A0C               	btfsc	12,4	;volatile
  2787  01B2  29B4               	goto	u971
  2788  01B3  29B5               	goto	u970
  2789  01B4                     u971:	
  2790  01B4  2A51               	goto	l1551
  2791  01B5                     u970:	
  2792  01B5  2A53               	goto	l1553
  2793  01B6                     l1509:	
  2794                           
  2795                           ;main.c: 172: vol_minus_time_start = get_time();
  2796  01B6  3184  245E  3180   	fcall	_get_time
  2797  01B9  0873               	movf	?_get_time+3,w
  2798  01BA  0140               	movlb	0	; select bank0
  2799  01BB  00A7               	movwf	_vol_minus_time_start+3
  2800  01BC  0872               	movf	?_get_time+2,w
  2801  01BD  00A6               	movwf	_vol_minus_time_start+2
  2802  01BE  0871               	movf	?_get_time+1,w
  2803  01BF  00A5               	movwf	_vol_minus_time_start+1
  2804  01C0  0870               	movf	?_get_time,w
  2805  01C1  00A4               	movwf	_vol_minus_time_start
  2806  01C2                     l1511:	
  2807                           
  2808                           ;main.c: 173: vol_minus_state = 1;
  2809  01C2  01B8               	clrf	_vol_minus_state
  2810  01C3  0AB8               	incf	_vol_minus_state,f
  2811                           
  2812                           ;main.c: 174: break;
  2813  01C4  2A5E               	goto	l1557
  2814  01C5                     l1513:	
  2815                           
  2816                           ;main.c: 176: if(timer_diff(vol_minus_time_start) >= 4) {
  2817  01C5  0827               	movf	_vol_minus_time_start+3,w
  2818  01C6  00F3               	movwf	timer_diff@t+3
  2819  01C7  0826               	movf	_vol_minus_time_start+2,w
  2820  01C8  00F2               	movwf	timer_diff@t+2
  2821  01C9  0825               	movf	_vol_minus_time_start+1,w
  2822  01CA  00F1               	movwf	timer_diff@t+1
  2823  01CB  0824               	movf	_vol_minus_time_start,w
  2824  01CC  00F0               	movwf	timer_diff@t
  2825  01CD  3184  2414  3180   	fcall	_timer_diff
  2826  01D0  0873               	movf	?_timer_diff+3,w
  2827  01D1  1D03               	btfss	3,2
  2828  01D2  29DF               	goto	u980
  2829  01D3  0872               	movf	?_timer_diff+2,w
  2830  01D4  1D03               	btfss	3,2
  2831  01D5  29DF               	goto	u980
  2832  01D6  0871               	movf	?_timer_diff+1,w
  2833  01D7  1D03               	btfss	3,2
  2834  01D8  29DF               	goto	u980
  2835  01D9  3004               	movlw	4
  2836  01DA  0270               	subwf	?_timer_diff,w
  2837  01DB  1C03               	btfss	3,0
  2838  01DC  29DE               	goto	u981
  2839  01DD  29DF               	goto	u980
  2840  01DE                     u981:	
  2841  01DE  2A5E               	goto	l1557
  2842  01DF                     u980:	
  2843  01DF                     l1515:	
  2844                           
  2845                           ;main.c: 177: vol_minus_time_hold = get_time();
  2846  01DF  3184  245E  3180   	fcall	_get_time
  2847  01E2  0873               	movf	?_get_time+3,w
  2848  01E3  0140               	movlb	0	; select bank0
  2849  01E4  00A3               	movwf	_vol_minus_time_hold+3
  2850  01E5  0872               	movf	?_get_time+2,w
  2851  01E6  00A2               	movwf	_vol_minus_time_hold+2
  2852  01E7  0871               	movf	?_get_time+1,w
  2853  01E8  00A1               	movwf	_vol_minus_time_hold+1
  2854  01E9  0870               	movf	?_get_time,w
  2855  01EA  00A0               	movwf	_vol_minus_time_hold
  2856  01EB                     l1517:	
  2857                           
  2858                           ;main.c: 178: vol_minus_state = 2;
  2859  01EB  3002               	movlw	2
  2860  01EC  00C5               	movwf	??_main
  2861  01ED  0845               	movf	??_main,w
  2862  01EE  00B8               	movwf	_vol_minus_state
  2863  01EF                     l1519:	
  2864                           
  2865                           ;main.c: 179: if(HPS_state == 2) {
  2866  01EF  3002               	movlw	2
  2867  01F0  063A               	xorwf	_HPS_state,w
  2868  01F1  1D03               	btfss	3,2
  2869  01F2  29F4               	goto	u991
  2870  01F3  29F5               	goto	u990
  2871  01F4                     u991:	
  2872  01F4  2A02               	goto	l1527
  2873  01F5                     u990:	
  2874  01F5                     l1521:	
  2875                           
  2876                           ;main.c: 180: if((volume_hp > 0) && mute_state == 0) volume_hp--;
  2877  01F5  0848               	movf	_volume_hp,w
  2878  01F6  1903               	btfsc	3,2
  2879  01F7  29F9               	goto	u1001
  2880  01F8  29FA               	goto	u1000
  2881  01F9                     u1001:	
  2882  01F9  2A5E               	goto	l139
  2883  01FA                     u1000:	
  2884  01FA                     l1523:	
  2885  01FA  083B               	movf	_mute_state,w
  2886  01FB  1D03               	btfss	3,2
  2887  01FC  29FE               	goto	u1011
  2888  01FD  29FF               	goto	u1010
  2889  01FE                     u1011:	
  2890  01FE  2A5E               	goto	l139
  2891  01FF                     u1010:	
  2892  01FF                     l1525:	
  2893  01FF  3001               	movlw	1
  2894  0200  02C8               	subwf	_volume_hp,f
  2895  0201  2A5E               	goto	l1557
  2896  0202                     l1527:	
  2897                           
  2898                           ;main.c: 182: else if((volume_sp > 0) && mute_state == 0) volume_sp--;
  2899  0202  084A               	movf	_volume_sp,w
  2900  0203  1903               	btfsc	3,2
  2901  0204  2A06               	goto	u1021
  2902  0205  2A07               	goto	u1020
  2903  0206                     u1021:	
  2904  0206  2A5E               	goto	l139
  2905  0207                     u1020:	
  2906  0207                     l1529:	
  2907  0207  083B               	movf	_mute_state,w
  2908  0208  1D03               	btfss	3,2
  2909  0209  2A0B               	goto	u1031
  2910  020A  2A0C               	goto	u1030
  2911  020B                     u1031:	
  2912  020B  2A5E               	goto	l139
  2913  020C                     u1030:	
  2914  020C                     l1531:	
  2915  020C  3001               	movlw	1
  2916  020D  02CA               	subwf	_volume_sp,f
  2917  020E  2A5E               	goto	l1557
  2918  020F                     l1533:	
  2919                           
  2920                           ;main.c: 186: if(timer_diff(vol_minus_time_hold) >= 20) {
  2921  020F  0823               	movf	_vol_minus_time_hold+3,w
  2922  0210  00F3               	movwf	timer_diff@t+3
  2923  0211  0822               	movf	_vol_minus_time_hold+2,w
  2924  0212  00F2               	movwf	timer_diff@t+2
  2925  0213  0821               	movf	_vol_minus_time_hold+1,w
  2926  0214  00F1               	movwf	timer_diff@t+1
  2927  0215  0820               	movf	_vol_minus_time_hold,w
  2928  0216  00F0               	movwf	timer_diff@t
  2929  0217  3184  2414  3180   	fcall	_timer_diff
  2930  021A  0873               	movf	?_timer_diff+3,w
  2931  021B  1D03               	btfss	3,2
  2932  021C  2A29               	goto	u1040
  2933  021D  0872               	movf	?_timer_diff+2,w
  2934  021E  1D03               	btfss	3,2
  2935  021F  2A29               	goto	u1040
  2936  0220  0871               	movf	?_timer_diff+1,w
  2937  0221  1D03               	btfss	3,2
  2938  0222  2A29               	goto	u1040
  2939  0223  3014               	movlw	20
  2940  0224  0270               	subwf	?_timer_diff,w
  2941  0225  1C03               	btfss	3,0
  2942  0226  2A28               	goto	u1041
  2943  0227  2A29               	goto	u1040
  2944  0228                     u1041:	
  2945  0228  2A5E               	goto	l1557
  2946  0229                     u1040:	
  2947  0229                     l1535:	
  2948                           
  2949                           ;main.c: 187: vol_minus_time_hold = get_time();
  2950  0229  3184  245E  3180   	fcall	_get_time
  2951  022C  0873               	movf	?_get_time+3,w
  2952  022D  0140               	movlb	0	; select bank0
  2953  022E  00A3               	movwf	_vol_minus_time_hold+3
  2954  022F  0872               	movf	?_get_time+2,w
  2955  0230  00A2               	movwf	_vol_minus_time_hold+2
  2956  0231  0871               	movf	?_get_time+1,w
  2957  0232  00A1               	movwf	_vol_minus_time_hold+1
  2958  0233  0870               	movf	?_get_time,w
  2959  0234  00A0               	movwf	_vol_minus_time_hold
  2960  0235                     l1537:	
  2961                           
  2962                           ;main.c: 188: if(HPS_state == 2) {
  2963  0235  3002               	movlw	2
  2964  0236  063A               	xorwf	_HPS_state,w
  2965  0237  1D03               	btfss	3,2
  2966  0238  2A3A               	goto	u1051
  2967  0239  2A3B               	goto	u1050
  2968  023A                     u1051:	
  2969  023A  2A46               	goto	l1545
  2970  023B                     u1050:	
  2971  023B                     l1539:	
  2972                           
  2973                           ;main.c: 189: if((volume_hp > 0) && mute_state == 0) volume_hp--;
  2974  023B  0848               	movf	_volume_hp,w
  2975  023C  1903               	btfsc	3,2
  2976  023D  2A3F               	goto	u1061
  2977  023E  2A40               	goto	u1060
  2978  023F                     u1061:	
  2979  023F  2A5E               	goto	l1557
  2980  0240                     u1060:	
  2981  0240                     l1541:	
  2982  0240  083B               	movf	_mute_state,w
  2983  0241  1D03               	btfss	3,2
  2984  0242  2A44               	goto	u1071
  2985  0243  2A45               	goto	u1070
  2986  0244                     u1071:	
  2987  0244  2A5E               	goto	l1557
  2988  0245                     u1070:	
  2989  0245  29FF               	goto	l1525
  2990  0246                     l1545:	
  2991                           
  2992                           ;main.c: 191: else if((volume_sp > 0) && mute_state == 0) volume_sp--;
  2993  0246  084A               	movf	_volume_sp,w
  2994  0247  1903               	btfsc	3,2
  2995  0248  2A4A               	goto	u1081
  2996  0249  2A4B               	goto	u1080
  2997  024A                     u1081:	
  2998  024A  2A5E               	goto	l1557
  2999  024B                     u1080:	
  3000  024B                     l1547:	
  3001  024B  083B               	movf	_mute_state,w
  3002  024C  1D03               	btfss	3,2
  3003  024D  2A4F               	goto	u1091
  3004  024E  2A50               	goto	u1090
  3005  024F                     u1091:	
  3006  024F  2A5E               	goto	l1557
  3007  0250                     u1090:	
  3008  0250  2A0C               	goto	l1531
  3009  0251                     l1551:	
  3010                           
  3011                           ;main.c: 195: vol_minus_state = 0;
  3012  0251  01B8               	clrf	_vol_minus_state
  3013                           
  3014                           ;main.c: 196: }
  3015  0252  2A5E               	goto	l1557
  3016  0253                     l1553:	
  3017  0253  0838               	movf	_vol_minus_state,w
  3018                           
  3019                           ; Switch size 1, requested type "simple"
  3020                           ; Number of cases is 3, Range of values is 0 to 2
  3021                           ; switch strategies available:
  3022                           ; Name         Instructions Cycles
  3023                           ; simple_byte           10     6 (average)
  3024                           ; direct_byte           12     6 (fixed)
  3025                           ; jumptable            260     6 (fixed)
  3026                           ;	Chosen strategy is simple_byte
  3027  0254  3A00               	xorlw	0	; case 0
  3028  0255  1903               	skipnz
  3029  0256  29B6               	goto	l1509
  3030  0257  3A01               	xorlw	1	; case 1
  3031  0258  1903               	skipnz
  3032  0259  29C5               	goto	l1513
  3033  025A  3A03               	xorlw	3	; case 2
  3034  025B  1903               	skipnz
  3035  025C  2A0F               	goto	l1533
  3036  025D  2A51               	goto	l1551
  3037  025E                     l139:	
  3038  025E                     l1557:	
  3039                           ;main.c: 197: }
  3040                           
  3041                           
  3042                           ;main.c: 200: };main.c: 203: if((vol_plus_state == 2) && (vol_minus_state == 2)) {
  3043  025E  3002               	movlw	2
  3044  025F  0140               	movlb	0	; select bank0
  3045  0260  0639               	xorwf	_vol_plus_state,w
  3046  0261  1D03               	btfss	3,2
  3047  0262  2A64               	goto	u1101
  3048  0263  2A65               	goto	u1100
  3049  0264                     u1101:	
  3050  0264  2A97               	goto	l1575
  3051  0265                     u1100:	
  3052  0265                     l1559:	
  3053  0265  3002               	movlw	2
  3054  0266  0638               	xorwf	_vol_minus_state,w
  3055  0267  1D03               	btfss	3,2
  3056  0268  2A6A               	goto	u1111
  3057  0269  2A6B               	goto	u1110
  3058  026A                     u1111:	
  3059  026A  2A97               	goto	l1575
  3060  026B                     u1110:	
  3061  026B  2A89               	goto	l1573
  3062  026C                     l1563:	
  3063                           
  3064                           ;main.c: 207: LM49450_write(0x00, (mute_config | 0b100));
  3065  026C  083C               	movf	_mute_config,w
  3066  026D  3804               	iorlw	4
  3067  026E  00C5               	movwf	??_main
  3068  026F  0845               	movf	??_main,w
  3069  0270  00F1               	movwf	LM49450_write@data
  3070  0271  3000               	movlw	0
  3071  0272  3184  242A  3180   	fcall	_LM49450_write
  3072  0275                     l1565:	
  3073                           
  3074                           ;main.c: 208: mute_state = 1;
  3075  0275  0140               	movlb	0	; select bank0
  3076  0276  01BB               	clrf	_mute_state
  3077  0277  0ABB               	incf	_mute_state,f
  3078                           
  3079                           ;main.c: 209: break;
  3080  0278  2AA7               	goto	l1583
  3081  0279                     l1567:	
  3082                           
  3083                           ;main.c: 214: LM49450_write(0x00, mute_config);
  3084  0279  083C               	movf	_mute_config,w
  3085  027A  00C5               	movwf	??_main
  3086  027B  0845               	movf	??_main,w
  3087  027C  00F1               	movwf	LM49450_write@data
  3088  027D  3000               	movlw	0
  3089  027E  3184  242A  3180   	fcall	_LM49450_write
  3090  0281                     l1569:	
  3091                           
  3092                           ;main.c: 215: mute_state = 3;
  3093  0281  3003               	movlw	3
  3094  0282  0140               	movlb	0	; select bank0
  3095  0283  00C5               	movwf	??_main
  3096  0284  0845               	movf	??_main,w
  3097  0285  00BB               	movwf	_mute_state
  3098                           
  3099                           ;main.c: 216: break;
  3100  0286  2AA7               	goto	l1583
  3101  0287                     l1571:	
  3102                           
  3103                           ;main.c: 221: mute_state = 0;
  3104  0287  01BB               	clrf	_mute_state
  3105                           
  3106                           ;main.c: 222: }
  3107  0288  2AA7               	goto	l1583
  3108  0289                     l1573:	
  3109  0289  083B               	movf	_mute_state,w
  3110                           
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 4, Range of values is 0 to 3
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte           13     7 (average)
  3116                           ; direct_byte           14     6 (fixed)
  3117                           ; jumptable            260     6 (fixed)
  3118                           ;	Chosen strategy is simple_byte
  3119  028A  3A00               	xorlw	0	; case 0
  3120  028B  1903               	skipnz
  3121  028C  2A6C               	goto	l1563
  3122  028D  3A01               	xorlw	1	; case 1
  3123  028E  1903               	skipnz
  3124  028F  2AA7               	goto	l1583
  3125  0290  3A03               	xorlw	3	; case 2
  3126  0291  1903               	skipnz
  3127  0292  2A79               	goto	l1567
  3128  0293  3A01               	xorlw	1	; case 3
  3129  0294  1903               	skipnz
  3130  0295  2AA7               	goto	l1583
  3131  0296  2A87               	goto	l1571
  3132  0297                     l1575:	
  3133                           
  3134                           ;main.c: 224: else {;main.c: 225: if(mute_state == 1) {
  3135  0297  033B               	decf	_mute_state,w
  3136  0298  1D03               	btfss	3,2
  3137  0299  2A9B               	goto	u1121
  3138  029A  2A9C               	goto	u1120
  3139  029B                     u1121:	
  3140  029B  2AA0               	goto	l1579
  3141  029C                     u1120:	
  3142  029C                     l1577:	
  3143                           
  3144                           ;main.c: 226: mute_state = 2;
  3145  029C  3002               	movlw	2
  3146  029D  00C5               	movwf	??_main
  3147  029E  0845               	movf	??_main,w
  3148  029F  00BB               	movwf	_mute_state
  3149  02A0                     l1579:	
  3150                           
  3151                           ;main.c: 227: };main.c: 228: if(mute_state == 3) {
  3152  02A0  3003               	movlw	3
  3153  02A1  063B               	xorwf	_mute_state,w
  3154  02A2  1D03               	btfss	3,2
  3155  02A3  2AA5               	goto	u1131
  3156  02A4  2AA6               	goto	u1130
  3157  02A5                     u1131:	
  3158  02A5  2AA7               	goto	l1583
  3159  02A6                     u1130:	
  3160  02A6  2A87               	goto	l1571
  3161  02A7                     l1583:	
  3162                           
  3163                           ;main.c: 230: };main.c: 231: };main.c: 234: if((volume_sp != volume_sp_prev) && mute_sta
      +                          te == 0) {
  3164  02A7  084A               	movf	_volume_sp,w
  3165  02A8  0649               	xorwf	_volume_sp_prev,w
  3166  02A9  1903               	skipnz
  3167  02AA  2AAC               	goto	u1141
  3168  02AB  2AAD               	goto	u1140
  3169  02AC                     u1141:	
  3170  02AC  2AD2               	goto	l1595
  3171  02AD                     u1140:	
  3172  02AD                     l1585:	
  3173  02AD  083B               	movf	_mute_state,w
  3174  02AE  1D03               	btfss	3,2
  3175  02AF  2AB1               	goto	u1151
  3176  02B0  2AB2               	goto	u1150
  3177  02B1                     u1151:	
  3178  02B1  2AD2               	goto	l1595
  3179  02B2                     u1150:	
  3180  02B2                     l1587:	
  3181                           
  3182                           ;main.c: 235: LM49450_write(0x08, volume_sp);
  3183  02B2  084A               	movf	_volume_sp,w
  3184  02B3  00C5               	movwf	??_main
  3185  02B4  0845               	movf	??_main,w
  3186  02B5  00F1               	movwf	LM49450_write@data
  3187  02B6  3008               	movlw	8
  3188  02B7  3184  242A  3180   	fcall	_LM49450_write
  3189  02BA                     l1589:	
  3190                           
  3191                           ;main.c: 236: if(volume_sp == 0) {
  3192  02BA  0140               	movlb	0	; select bank0
  3193  02BB  084A               	movf	_volume_sp,w
  3194  02BC  1D03               	btfss	3,2
  3195  02BD  2ABF               	goto	u1161
  3196  02BE  2AC0               	goto	u1160
  3197  02BF                     u1161:	
  3198  02BF  2ACA               	goto	l1593
  3199  02C0                     u1160:	
  3200  02C0                     l1591:	
  3201                           
  3202                           ;main.c: 237: LM49450_write(0x00, (mute_config | 0b00000100));
  3203  02C0  083C               	movf	_mute_config,w
  3204  02C1  3804               	iorlw	4
  3205  02C2  00C5               	movwf	??_main
  3206  02C3  0845               	movf	??_main,w
  3207  02C4  00F1               	movwf	LM49450_write@data
  3208  02C5  3000               	movlw	0
  3209  02C6  3184  242A  3180   	fcall	_LM49450_write
  3210                           
  3211                           ;main.c: 238: }
  3212  02C9  2AD2               	goto	l1595
  3213  02CA                     l1593:	
  3214                           
  3215                           ;main.c: 239: else {;main.c: 240: LM49450_write(0x00, mute_config);
  3216  02CA  083C               	movf	_mute_config,w
  3217  02CB  00C5               	movwf	??_main
  3218  02CC  0845               	movf	??_main,w
  3219  02CD  00F1               	movwf	LM49450_write@data
  3220  02CE  3000               	movlw	0
  3221  02CF  3184  242A  3180   	fcall	_LM49450_write
  3222  02D2                     l1595:	
  3223                           
  3224                           ;main.c: 241: };main.c: 242: };main.c: 244: if((volume_hp != volume_hp_prev) && mute_sta
      +                          te == 0) {
  3225  02D2  0140               	movlb	0	; select bank0
  3226  02D3  0848               	movf	_volume_hp,w
  3227  02D4  0647               	xorwf	_volume_hp_prev,w
  3228  02D5  1903               	skipnz
  3229  02D6  2AD8               	goto	u1171
  3230  02D7  2AD9               	goto	u1170
  3231  02D8                     u1171:	
  3232  02D8  2AFE               	goto	l1607
  3233  02D9                     u1170:	
  3234  02D9                     l1597:	
  3235  02D9  083B               	movf	_mute_state,w
  3236  02DA  1D03               	btfss	3,2
  3237  02DB  2ADD               	goto	u1181
  3238  02DC  2ADE               	goto	u1180
  3239  02DD                     u1181:	
  3240  02DD  2AFE               	goto	l1607
  3241  02DE                     u1180:	
  3242  02DE                     l1599:	
  3243                           
  3244                           ;main.c: 245: LM49450_write(0x07, volume_hp);
  3245  02DE  0848               	movf	_volume_hp,w
  3246  02DF  00C5               	movwf	??_main
  3247  02E0  0845               	movf	??_main,w
  3248  02E1  00F1               	movwf	LM49450_write@data
  3249  02E2  3007               	movlw	7
  3250  02E3  3184  242A  3180   	fcall	_LM49450_write
  3251  02E6                     l1601:	
  3252                           
  3253                           ;main.c: 246: if(volume_hp == 0) {
  3254  02E6  0140               	movlb	0	; select bank0
  3255  02E7  0848               	movf	_volume_hp,w
  3256  02E8  1D03               	btfss	3,2
  3257  02E9  2AEB               	goto	u1191
  3258  02EA  2AEC               	goto	u1190
  3259  02EB                     u1191:	
  3260  02EB  2AF6               	goto	l1605
  3261  02EC                     u1190:	
  3262  02EC                     l1603:	
  3263                           
  3264                           ;main.c: 247: LM49450_write(0x00, (mute_config | 0b00000100));
  3265  02EC  083C               	movf	_mute_config,w
  3266  02ED  3804               	iorlw	4
  3267  02EE  00C5               	movwf	??_main
  3268  02EF  0845               	movf	??_main,w
  3269  02F0  00F1               	movwf	LM49450_write@data
  3270  02F1  3000               	movlw	0
  3271  02F2  3184  242A  3180   	fcall	_LM49450_write
  3272                           
  3273                           ;main.c: 248: }
  3274  02F5  2AFE               	goto	l1607
  3275  02F6                     l1605:	
  3276                           
  3277                           ;main.c: 249: else {;main.c: 250: LM49450_write(0x00, mute_config);
  3278  02F6  083C               	movf	_mute_config,w
  3279  02F7  00C5               	movwf	??_main
  3280  02F8  0845               	movf	??_main,w
  3281  02F9  00F1               	movwf	LM49450_write@data
  3282  02FA  3000               	movlw	0
  3283  02FB  3184  242A  3180   	fcall	_LM49450_write
  3284  02FE                     l1607:	
  3285                           
  3286                           ;main.c: 251: };main.c: 252: };main.c: 254: volume_sp_prev = volume_sp;
  3287  02FE  0140               	movlb	0	; select bank0
  3288  02FF  084A               	movf	_volume_sp,w
  3289  0300  00C5               	movwf	??_main
  3290  0301  0845               	movf	??_main,w
  3291  0302  00C9               	movwf	_volume_sp_prev
  3292  0303                     l1609:	
  3293                           
  3294                           ;main.c: 255: volume_hp_prev = volume_hp;
  3295  0303  0848               	movf	_volume_hp,w
  3296  0304  00C5               	movwf	??_main
  3297  0305  0845               	movf	??_main,w
  3298  0306  00C7               	movwf	_volume_hp_prev
  3299  0307  288F               	goto	l1423
  3300  0308  3180  281C         	ljmp	start
  3301  030A                     __end_of_main:	
  3302                           
  3303                           	psect	text1
  3304  0414                     __ptext1:	
  3305 ;; *************** function _timer_diff *****************
  3306 ;; Defined at:
  3307 ;;		line 17 in file "time.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  t               4    0[COMMON] unsigned long 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  4    0[COMMON] unsigned long 
  3314 ;; Registers used:
  3315 ;;		wreg
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3321 ;;      Params:         4       0       0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0
  3323 ;;      Temps:          4       0       0       0       0       0       0       0
  3324 ;;      Totals:         8       0       0       0       0       0       0       0
  3325 ;;Total ram usage:        8 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    1
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _timer_diff
  3337  0414                     _timer_diff:	
  3338  0414                     l1395:	
  3339                           ;incstack = 0
  3340                           ; Regs used in _timer_diff: [wreg]
  3341                           
  3342                           
  3343                           ;time.c: 18: return timer_counter - t;
  3344  0414  0870               	movf	timer_diff@t,w
  3345  0415  0140               	movlb	0	; select bank0
  3346  0416  0234               	subwf	_timer_counter,w
  3347  0417  00F4               	movwf	??_timer_diff
  3348  0418  0871               	movf	timer_diff@t+1,w
  3349  0419  3B35               	subwfb	_timer_counter+1,w
  3350  041A  00F5               	movwf	??_timer_diff+1
  3351  041B  0872               	movf	timer_diff@t+2,w
  3352  041C  3B36               	subwfb	_timer_counter+2,w
  3353  041D  00F6               	movwf	??_timer_diff+2
  3354  041E  0873               	movf	timer_diff@t+3,w
  3355  041F  3B37               	subwfb	_timer_counter+3,w
  3356  0420  00F7               	movwf	??_timer_diff+3
  3357  0421  0877               	movf	??_timer_diff+3,w
  3358  0422  00F3               	movwf	?_timer_diff+3
  3359  0423  0876               	movf	??_timer_diff+2,w
  3360  0424  00F2               	movwf	?_timer_diff+2
  3361  0425  0875               	movf	??_timer_diff+1,w
  3362  0426  00F1               	movwf	?_timer_diff+1
  3363  0427  0874               	movf	??_timer_diff,w
  3364  0428  00F0               	movwf	?_timer_diff
  3365  0429                     l253:	
  3366  0429  0008               	return
  3367  042A                     __end_of_timer_diff:	
  3368                           
  3369                           	psect	text2
  3370  045E                     __ptext2:	
  3371 ;; *************** function _get_time *****************
  3372 ;; Defined at:
  3373 ;;		line 13 in file "time.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  4    0[COMMON] unsigned long 
  3380 ;; Registers used:
  3381 ;;		wreg
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3387 ;;      Params:         4       0       0       0       0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0
  3390 ;;      Totals:         4       0       0       0       0       0       0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _get_time
  3403  045E                     _get_time:	
  3404  045E                     l1391:	
  3405                           ;incstack = 0
  3406                           ; Regs used in _get_time: [wreg]
  3407                           
  3408                           
  3409                           ;time.c: 14: return timer_counter;
  3410  045E  0140               	movlb	0	; select bank0
  3411  045F  0837               	movf	_timer_counter+3,w
  3412  0460  00F3               	movwf	?_get_time+3
  3413  0461  0836               	movf	_timer_counter+2,w
  3414  0462  00F2               	movwf	?_get_time+2
  3415  0463  0835               	movf	_timer_counter+1,w
  3416  0464  00F1               	movwf	?_get_time+1
  3417  0465  0834               	movf	_timer_counter,w
  3418  0466  00F0               	movwf	?_get_time
  3419  0467                     l250:	
  3420  0467  0008               	return
  3421  0468                     __end_of_get_time:	
  3422                           
  3423                           	psect	text3
  3424  0482                     __ptext3:	
  3425 ;; *************** function _PPS_unlock *****************
  3426 ;; Defined at:
  3427 ;;		line 11 in file "PPS.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3441 ;;      Params:         0       0       0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _PPS_unlock
  3457  0482                     _PPS_unlock:	
  3458  0482                     l1351:	
  3459                           ;incstack = 0
  3460                           ; Regs used in _PPS_unlock: [wreg+status,2]
  3461                           
  3462                           
  3463                           ;PPS.c: 12: PPSLOCK = 0x55;
  3464  0482  3055               	movlw	85
  3465  0483  017D               	movlb	61	; select bank61
  3466  0484  008F               	movwf	15	;volsfr
  3467                           
  3468                           ;PPS.c: 13: PPSLOCK = 0xAA;
  3469  0485  30AA               	movlw	170
  3470  0486  008F               	movwf	15	;volsfr
  3471  0487                     l1353:	
  3472                           
  3473                           ;PPS.c: 14: PPSLOCK = 0;
  3474  0487  018F               	clrf	15	;volsfr
  3475  0488                     l178:	
  3476  0488  0008               	return
  3477  0489                     __end_of_PPS_unlock:	
  3478                           
  3479                           	psect	text4
  3480  0472                     __ptext4:	
  3481 ;; *************** function _PPS_lock *****************
  3482 ;; Defined at:
  3483 ;;		line 17 in file "PPS.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3497 ;;      Params:         0       0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _PPS_lock
  3513  0472                     _PPS_lock:	
  3514  0472                     l1355:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _PPS_lock: [wreg]
  3517                           
  3518                           
  3519                           ;PPS.c: 18: PPSLOCK = 0x55;
  3520  0472  3055               	movlw	85
  3521  0473  017D               	movlb	61	; select bank61
  3522  0474  008F               	movwf	15	;volsfr
  3523                           
  3524                           ;PPS.c: 19: PPSLOCK = 0xAA;
  3525  0475  30AA               	movlw	170
  3526  0476  008F               	movwf	15	;volsfr
  3527                           
  3528                           ;PPS.c: 20: PPSLOCK = 1;
  3529  0477  3001               	movlw	1
  3530  0478  008F               	movwf	15	;volsfr
  3531  0479                     l181:	
  3532  0479  0008               	return
  3533  047A                     __end_of_PPS_lock:	
  3534                           
  3535                           	psect	text5
  3536  03F5                     __ptext5:	
  3537 ;; *************** function _PIC_SETUP *****************
  3538 ;; Defined at:
  3539 ;;		line 17 in file "main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3553 ;;      Params:         0       0       0       0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _PIC_SETUP
  3569  03F5                     _PIC_SETUP:	
  3570  03F5                     l1325:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  3573                           
  3574                           
  3575                           ;main.c: 20: TRISA = 0xFF;
  3576  03F5  30FF               	movlw	255
  3577  03F6  0140               	movlb	0	; select bank0
  3578  03F7  0092               	movwf	18	;volatile
  3579                           
  3580                           ;main.c: 21: TRISC = 0xFF;
  3581  03F8  30FF               	movlw	255
  3582  03F9  0094               	movwf	20	;volatile
  3583  03FA                     l1327:	
  3584                           
  3585                           ;main.c: 22: ANSELA = 0;
  3586  03FA  017E               	movlb	62	; select bank62
  3587  03FB  01B8               	clrf	56	;volatile
  3588  03FC                     l1329:	
  3589                           
  3590                           ;main.c: 23: ANSELC = 0;
  3591  03FC  01CE               	clrf	78	;volatile
  3592                           
  3593                           ;main.c: 24: WPUA = 0b00110000;
  3594  03FD  3030               	movlw	48
  3595  03FE  00B9               	movwf	57	;volatile
  3596                           
  3597                           ;main.c: 25: WPUC = 0b00010000;
  3598  03FF  3010               	movlw	16
  3599  0400  00CF               	movwf	79	;volatile
  3600  0401                     l1331:	
  3601                           
  3602                           ;main.c: 28: T1CONbits.CKPS = 0b00;
  3603  0401  30CF               	movlw	-49
  3604  0402  0144               	movlb	4	; select bank4
  3605  0403  058E               	andwf	14,f	;volatile
  3606  0404                     l1333:	
  3607                           
  3608                           ;main.c: 29: T1CONbits.nSYNC = 0;
  3609  0404  110E               	bcf	14,2	;volatile
  3610  0405                     l1335:	
  3611                           
  3612                           ;main.c: 30: T1CONbits.RD16 = 1;
  3613  0405  148E               	bsf	14,1	;volatile
  3614  0406                     l1337:	
  3615                           
  3616                           ;main.c: 31: T1GCONbits.GE = 0;
  3617  0406  138F               	bcf	15,7	;volatile
  3618  0407                     l1339:	
  3619                           
  3620                           ;main.c: 32: T1CLK = 0b00000100;
  3621  0407  3004               	movlw	4
  3622  0408  0091               	movwf	17	;volatile
  3623  0409                     l1341:	
  3624                           
  3625                           ;main.c: 33: TMR1 = 65228;
  3626  0409  30FE               	movlw	254
  3627  040A  008D               	movwf	13	;volatile
  3628  040B  30CC               	movlw	204
  3629  040C  008C               	movwf	12	;volatile
  3630  040D                     l1343:	
  3631                           
  3632                           ;main.c: 34: PIE4bits.TMR1IE = 1;
  3633  040D  014E               	movlb	14	; select bank14
  3634  040E  141A               	bsf	26,0	;volatile
  3635  040F                     l1345:	
  3636                           
  3637                           ;main.c: 35: T1CONbits.ON = 1;
  3638  040F  0144               	movlb	4	; select bank4
  3639  0410  140E               	bsf	14,0	;volatile
  3640  0411                     l1347:	
  3641                           
  3642                           ;main.c: 37: INTCONbits.GIE = 1;
  3643  0411  178B               	bsf	11,7	;volatile
  3644  0412                     l1349:	
  3645                           
  3646                           ;main.c: 38: INTCONbits.PEIE = 1;
  3647  0412  170B               	bsf	11,6	;volatile
  3648  0413                     l67:	
  3649  0413  0008               	return
  3650  0414                     __end_of_PIC_SETUP:	
  3651                           
  3652                           	psect	text6
  3653  0468                     __ptext6:	
  3654 ;; *************** function _LM49450_analog_init *****************
  3655 ;; Defined at:
  3656 ;;		line 55 in file "LM49450.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  reg0_analog     1    0        unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      unsigned char 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3670 ;;      Params:         0       0       0       0       0       0       0       0
  3671 ;;      Locals:         1       0       0       0       0       0       0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0
  3673 ;;      Totals:         2       0       0       0       0       0       0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    4
  3677 ;; This function calls:
  3678 ;;		_LM49450_write
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _LM49450_analog_init
  3686  0468                     _LM49450_analog_init:	
  3687  0468                     l1383:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _LM49450_analog_init: [wreg+status,2+status,0+pclath+cstack]
  3690                           
  3691  0468                     l1385:	
  3692                           
  3693                           ;LM49450.c: 57: LM49450_write(0x00, reg0_analog);
  3694  0468  302B               	movlw	43
  3695  0469  00F3               	movwf	??_LM49450_analog_init
  3696  046A  0873               	movf	??_LM49450_analog_init,w
  3697  046B  00F1               	movwf	LM49450_write@data
  3698  046C  3000               	movlw	0
  3699  046D  3184  242A  3184   	fcall	_LM49450_write
  3700  0470                     l1387:	
  3701                           
  3702                           ;LM49450.c: 59: return reg0_analog;
  3703  0470  302B               	movlw	43
  3704  0471                     l274:	
  3705  0471  0008               	return
  3706  0472                     __end_of_LM49450_analog_init:	
  3707                           
  3708                           	psect	text7
  3709  03CE                     __ptext7:	
  3710 ;; *************** function _LM49450_N64_init *****************
  3711 ;; Defined at:
  3712 ;;		line 62 in file "LM49450.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  reg0_N64        1    0        unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      unsigned char 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3726 ;;      Params:         0       0       0       0       0       0       0       0
  3727 ;;      Locals:         1       0       0       0       0       0       0       0
  3728 ;;      Temps:          1       0       0       0       0       0       0       0
  3729 ;;      Totals:         2       0       0       0       0       0       0       0
  3730 ;;Total ram usage:        2 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    4
  3733 ;; This function calls:
  3734 ;;		_LM49450_write
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           
  3741                           ;psect for function _LM49450_N64_init
  3742  03CE                     _LM49450_N64_init:	
  3743  03CE                     l1367:	
  3744                           ;incstack = 0
  3745                           ; Regs used in _LM49450_N64_init: [wreg+status,2+status,0+pclath+cstack]
  3746                           
  3747  03CE                     l1369:	
  3748                           
  3749                           ;LM49450.c: 64: LM49450_write(0x00, reg0_N64);
  3750  03CE  3029               	movlw	41
  3751  03CF  00F3               	movwf	??_LM49450_N64_init
  3752  03D0  0873               	movf	??_LM49450_N64_init,w
  3753  03D1  00F1               	movwf	LM49450_write@data
  3754  03D2  3000               	movlw	0
  3755  03D3  3184  242A  3183   	fcall	_LM49450_write
  3756  03D6                     l1371:	
  3757                           
  3758                           ;LM49450.c: 65: LM49450_write(0x01, 0b00000011);
  3759  03D6  3003               	movlw	3
  3760  03D7  00F3               	movwf	??_LM49450_N64_init
  3761  03D8  0873               	movf	??_LM49450_N64_init,w
  3762  03D9  00F1               	movwf	LM49450_write@data
  3763  03DA  3001               	movlw	1
  3764  03DB  3184  242A  3183   	fcall	_LM49450_write
  3765  03DE                     l1373:	
  3766                           
  3767                           ;LM49450.c: 66: LM49450_write(0x02, 0x4B);
  3768  03DE  304B               	movlw	75
  3769  03DF  00F3               	movwf	??_LM49450_N64_init
  3770  03E0  0873               	movf	??_LM49450_N64_init,w
  3771  03E1  00F1               	movwf	LM49450_write@data
  3772  03E2  3002               	movlw	2
  3773  03E3  3184  242A  3183   	fcall	_LM49450_write
  3774  03E6                     l1375:	
  3775                           
  3776                           ;LM49450.c: 67: LM49450_write(0x03, 0b00000010);
  3777  03E6  3002               	movlw	2
  3778  03E7  00F3               	movwf	??_LM49450_N64_init
  3779  03E8  0873               	movf	??_LM49450_N64_init,w
  3780  03E9  00F1               	movwf	LM49450_write@data
  3781  03EA  3003               	movlw	3
  3782  03EB  3184  242A  3183   	fcall	_LM49450_write
  3783  03EE                     l1377:	
  3784                           
  3785                           ;LM49450.c: 68: LM49450_write(0x04, 0x00);
  3786  03EE  01F1               	clrf	LM49450_write@data
  3787  03EF  3004               	movlw	4
  3788  03F0  3184  242A  3183   	fcall	_LM49450_write
  3789  03F3                     l1379:	
  3790                           
  3791                           ;LM49450.c: 70: return reg0_N64;
  3792  03F3  3029               	movlw	41
  3793  03F4                     l277:	
  3794  03F4  0008               	return
  3795  03F5                     __end_of_LM49450_N64_init:	
  3796                           
  3797                           	psect	text8
  3798  042A                     __ptext8:	
  3799 ;; *************** function _LM49450_write *****************
  3800 ;; Defined at:
  3801 ;;		line 14 in file "LM49450.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  reg             1    wreg     unsigned char 
  3804 ;;  data            1    1[COMMON] unsigned char 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  reg             1    2[COMMON] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3816 ;;      Params:         1       0       0       0       0       0       0       0
  3817 ;;      Locals:         1       0       0       0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0
  3819 ;;      Totals:         2       0       0       0       0       0       0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		_I2C_Master_Start
  3825 ;;		_I2C_Master_Stop
  3826 ;;		_I2C_Master_Write
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;;		_LM49450_analog_init
  3830 ;;		_LM49450_N64_init
  3831 ;;		_LM49450_DC_init
  3832 ;;		_LM49450_Wii_init
  3833 ;;		_LM49450_PS2_init
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _LM49450_write
  3839  042A                     _LM49450_write:	
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in _LM49450_write: [wreg+status,2+status,0+pclath+cstack]
  3843                           ;LM49450_write@reg stored from wreg
  3844  042A  00F2               	movwf	LM49450_write@reg
  3845  042B                     l1297:	
  3846                           
  3847                           ;LM49450.c: 15: I2C_Master_Start();
  3848  042B  3184  2495  3184   	fcall	_I2C_Master_Start
  3849                           
  3850                           ;LM49450.c: 16: I2C_Master_Write(0b1111101 << 1);
  3851  042E  30FA               	movlw	250
  3852  042F  3184  247A  3184   	fcall	_I2C_Master_Write
  3853                           
  3854                           ;LM49450.c: 17: I2C_Master_Write(reg);
  3855  0432  0872               	movf	LM49450_write@reg,w
  3856  0433  3184  247A  3184   	fcall	_I2C_Master_Write
  3857                           
  3858                           ;LM49450.c: 18: I2C_Master_Write(data);
  3859  0436  0871               	movf	LM49450_write@data,w
  3860  0437  3184  247A  3184   	fcall	_I2C_Master_Write
  3861                           
  3862                           ;LM49450.c: 19: I2C_Master_Stop();
  3863  043A  3184  248F  3184   	fcall	_I2C_Master_Stop
  3864  043D                     l262:	
  3865  043D  0008               	return
  3866  043E                     __end_of_LM49450_write:	
  3867                           
  3868                           	psect	text9
  3869  03A0                     __ptext9:	
  3870 ;; *************** function _I2C_Master_Init *****************
  3871 ;; Defined at:
  3872 ;;		line 45 in file "I2C.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  clk             4    0[BANK0 ] const unsigned long 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3886 ;;      Params:         0       4       0       0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0
  3888 ;;      Temps:          0       4       0       0       0       0       0       0
  3889 ;;      Totals:         0       8       0       0       0       0       0       0
  3890 ;;Total ram usage:        8 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		___lldiv
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _I2C_Master_Init
  3902  03A0                     _I2C_Master_Init:	
  3903  03A0                     l1357:	
  3904                           ;incstack = 0
  3905                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3906                           
  3907                           
  3908                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  3909  03A0  3028               	movlw	40
  3910  03A1  0143               	movlb	3	; select bank3
  3911  03A2  0090               	movwf	16	;volatile
  3912  03A3                     l1359:	
  3913                           
  3914                           ;I2C.c: 48: SSP1CON2 = 0x00;
  3915  03A3  0191               	clrf	17	;volatile
  3916  03A4                     l1361:	
  3917                           
  3918                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  3919  03A4  0140               	movlb	0	; select bank0
  3920  03A5  083D               	movf	I2C_Master_Init@clk,w
  3921  03A6  00C1               	movwf	??_I2C_Master_Init
  3922  03A7  083E               	movf	I2C_Master_Init@clk+1,w
  3923  03A8  00C2               	movwf	??_I2C_Master_Init+1
  3924  03A9  083F               	movf	I2C_Master_Init@clk+2,w
  3925  03AA  00C3               	movwf	??_I2C_Master_Init+2
  3926  03AB  0840               	movf	I2C_Master_Init@clk+3,w
  3927  03AC  00C4               	movwf	??_I2C_Master_Init+3
  3928  03AD  3002               	movlw	2
  3929  03AE                     u725:	
  3930  03AE  35C1               	lslf	??_I2C_Master_Init,f
  3931  03AF  0DC2               	rlf	??_I2C_Master_Init+1,f
  3932  03B0  0DC3               	rlf	??_I2C_Master_Init+2,f
  3933  03B1  0DC4               	rlf	??_I2C_Master_Init+3,f
  3934  03B2                     u720:	
  3935  03B2  0B89               	decfsz	9,f
  3936  03B3  2BAE               	goto	u725
  3937  03B4  0844               	movf	??_I2C_Master_Init+3,w
  3938  03B5  00F3               	movwf	___lldiv@divisor+3
  3939  03B6  0843               	movf	??_I2C_Master_Init+2,w
  3940  03B7  00F2               	movwf	___lldiv@divisor+2
  3941  03B8  0842               	movf	??_I2C_Master_Init+1,w
  3942  03B9  00F1               	movwf	___lldiv@divisor+1
  3943  03BA  0841               	movf	??_I2C_Master_Init,w
  3944  03BB  00F0               	movwf	___lldiv@divisor
  3945  03BC  3001               	movlw	1
  3946  03BD  00F7               	movwf	___lldiv@dividend+3
  3947  03BE  30E8               	movlw	232
  3948  03BF  00F6               	movwf	___lldiv@dividend+2
  3949  03C0  3048               	movlw	72
  3950  03C1  00F5               	movwf	___lldiv@dividend+1
  3951  03C2  3000               	movlw	0
  3952  03C3  00F4               	movwf	___lldiv@dividend
  3953  03C4  3183  230A  3183   	fcall	___lldiv
  3954  03C7  0870               	movf	?___lldiv,w
  3955  03C8  3EFF               	addlw	255
  3956  03C9  0143               	movlb	3	; select bank3
  3957  03CA  008D               	movwf	13	;volatile
  3958  03CB                     l1363:	
  3959                           
  3960                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  3961  03CB  3080               	movlw	128
  3962  03CC  008F               	movwf	15	;volatile
  3963  03CD                     l216:	
  3964  03CD  0008               	return
  3965  03CE                     __end_of_I2C_Master_Init:	
  3966                           
  3967                           	psect	text10
  3968  030A                     __ptext10:	
  3969 ;; *************** function ___lldiv *****************
  3970 ;; Defined at:
  3971 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  divisor         4    0[COMMON] unsigned long 
  3974 ;;  dividend        4    4[COMMON] unsigned long 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  quotient        4    9[COMMON] unsigned long 
  3977 ;;  counter         1   13[COMMON] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  4    0[COMMON] unsigned long 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3987 ;;      Params:         8       0       0       0       0       0       0       0
  3988 ;;      Locals:         5       0       0       0       0       0       0       0
  3989 ;;      Temps:          1       0       0       0       0       0       0       0
  3990 ;;      Totals:        14       0       0       0       0       0       0       0
  3991 ;;Total ram usage:       14 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    1
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_I2C_Master_Init
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function ___lldiv
  4003  030A                     ___lldiv:	
  4004  030A                     l1301:	
  4005                           ;incstack = 0
  4006                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4007                           
  4008  030A  3000               	movlw	0
  4009  030B  00FC               	movwf	___lldiv@quotient+3
  4010  030C  3000               	movlw	0
  4011  030D  00FB               	movwf	___lldiv@quotient+2
  4012  030E  3000               	movlw	0
  4013  030F  00FA               	movwf	___lldiv@quotient+1
  4014  0310  3000               	movlw	0
  4015  0311  00F9               	movwf	___lldiv@quotient
  4016  0312  0873               	movf	___lldiv@divisor+3,w
  4017  0313  0472               	iorwf	___lldiv@divisor+2,w
  4018  0314  0471               	iorwf	___lldiv@divisor+1,w
  4019  0315  0470               	iorwf	___lldiv@divisor,w
  4020  0316  1903               	skipnz
  4021  0317  2B19               	goto	u651
  4022  0318  2B1A               	goto	u650
  4023  0319                     u651:	
  4024  0319  2B5B               	goto	l1321
  4025  031A                     u650:	
  4026  031A                     l1303:	
  4027  031A  01FD               	clrf	___lldiv@counter
  4028  031B  0AFD               	incf	___lldiv@counter,f
  4029  031C  2B28               	goto	l1307
  4030  031D                     l1305:	
  4031  031D  3001               	movlw	1
  4032  031E                     u665:	
  4033  031E  35F0               	lslf	___lldiv@divisor,f
  4034  031F  0DF1               	rlf	___lldiv@divisor+1,f
  4035  0320  0DF2               	rlf	___lldiv@divisor+2,f
  4036  0321  0DF3               	rlf	___lldiv@divisor+3,f
  4037  0322  0B89               	decfsz	9,f
  4038  0323  2B1E               	goto	u665
  4039  0324  3001               	movlw	1
  4040  0325  00F8               	movwf	??___lldiv
  4041  0326  0878               	movf	??___lldiv,w
  4042  0327  07FD               	addwf	___lldiv@counter,f
  4043  0328                     l1307:	
  4044  0328  1FF3               	btfss	___lldiv@divisor+3,7
  4045  0329  2B2B               	goto	u671
  4046  032A  2B2C               	goto	u670
  4047  032B                     u671:	
  4048  032B  2B1D               	goto	l1305
  4049  032C                     u670:	
  4050  032C                     l1309:	
  4051  032C  3001               	movlw	1
  4052  032D                     u685:	
  4053  032D  35F9               	lslf	___lldiv@quotient,f
  4054  032E  0DFA               	rlf	___lldiv@quotient+1,f
  4055  032F  0DFB               	rlf	___lldiv@quotient+2,f
  4056  0330  0DFC               	rlf	___lldiv@quotient+3,f
  4057  0331  0B89               	decfsz	9,f
  4058  0332  2B2D               	goto	u685
  4059  0333                     l1311:	
  4060  0333  0873               	movf	___lldiv@divisor+3,w
  4061  0334  0277               	subwf	___lldiv@dividend+3,w
  4062  0335  1D03               	skipz
  4063  0336  2B41               	goto	u695
  4064  0337  0872               	movf	___lldiv@divisor+2,w
  4065  0338  0276               	subwf	___lldiv@dividend+2,w
  4066  0339  1D03               	skipz
  4067  033A  2B41               	goto	u695
  4068  033B  0871               	movf	___lldiv@divisor+1,w
  4069  033C  0275               	subwf	___lldiv@dividend+1,w
  4070  033D  1D03               	skipz
  4071  033E  2B41               	goto	u695
  4072  033F  0870               	movf	___lldiv@divisor,w
  4073  0340  0274               	subwf	___lldiv@dividend,w
  4074  0341                     u695:	
  4075  0341  1C03               	skipc
  4076  0342  2B44               	goto	u691
  4077  0343  2B45               	goto	u690
  4078  0344                     u691:	
  4079  0344  2B4E               	goto	l1317
  4080  0345                     u690:	
  4081  0345                     l1313:	
  4082  0345  0870               	movf	___lldiv@divisor,w
  4083  0346  02F4               	subwf	___lldiv@dividend,f
  4084  0347  0871               	movf	___lldiv@divisor+1,w
  4085  0348  3BF5               	subwfb	___lldiv@dividend+1,f
  4086  0349  0872               	movf	___lldiv@divisor+2,w
  4087  034A  3BF6               	subwfb	___lldiv@dividend+2,f
  4088  034B  0873               	movf	___lldiv@divisor+3,w
  4089  034C  3BF7               	subwfb	___lldiv@dividend+3,f
  4090  034D                     l1315:	
  4091  034D  1479               	bsf	___lldiv@quotient,0
  4092  034E                     l1317:	
  4093  034E  3001               	movlw	1
  4094  034F                     u705:	
  4095  034F  36F3               	lsrf	___lldiv@divisor+3,f
  4096  0350  0CF2               	rrf	___lldiv@divisor+2,f
  4097  0351  0CF1               	rrf	___lldiv@divisor+1,f
  4098  0352  0CF0               	rrf	___lldiv@divisor,f
  4099  0353  0B89               	decfsz	9,f
  4100  0354  2B4F               	goto	u705
  4101  0355                     l1319:	
  4102  0355  3001               	movlw	1
  4103  0356  02FD               	subwf	___lldiv@counter,f
  4104  0357  1D03               	btfss	3,2
  4105  0358  2B5A               	goto	u711
  4106  0359  2B5B               	goto	u710
  4107  035A                     u711:	
  4108  035A  2B2C               	goto	l1309
  4109  035B                     u710:	
  4110  035B                     l1321:	
  4111  035B  087C               	movf	___lldiv@quotient+3,w
  4112  035C  00F3               	movwf	?___lldiv+3
  4113  035D  087B               	movf	___lldiv@quotient+2,w
  4114  035E  00F2               	movwf	?___lldiv+2
  4115  035F  087A               	movf	___lldiv@quotient+1,w
  4116  0360  00F1               	movwf	?___lldiv+1
  4117  0361  0879               	movf	___lldiv@quotient,w
  4118  0362  00F0               	movwf	?___lldiv
  4119  0363                     l393:	
  4120  0363  0008               	return
  4121  0364                     __end_of___lldiv:	
  4122                           
  4123                           	psect	text11
  4124  0364                     __ptext11:	
  4125 ;; *************** function _CS2300CP_init *****************
  4126 ;; Defined at:
  4127 ;;		line 22 in file "CS2300CP.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, status,2, status,0, pclath, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4141 ;;      Params:         0       0       0       0       0       0       0       0
  4142 ;;      Locals:         0       0       0       0       0       0       0       0
  4143 ;;      Temps:          1       0       0       0       0       0       0       0
  4144 ;;      Totals:         1       0       0       0       0       0       0       0
  4145 ;;Total ram usage:        1 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    4
  4148 ;; This function calls:
  4149 ;;		_CS2300CP_write
  4150 ;; This function is called by:
  4151 ;;		_main
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           
  4156                           ;psect for function _CS2300CP_init
  4157  0364                     _CS2300CP_init:	
  4158  0364                     l1365:	
  4159                           ;incstack = 0
  4160                           ; Regs used in _CS2300CP_init: [wreg+status,2+status,0+pclath+cstack]
  4161                           
  4162                           
  4163                           ;CS2300CP.c: 23: CS2300CP_write(0x17, 0b00001000);
  4164  0364  3008               	movlw	8
  4165  0365  00F3               	movwf	??_CS2300CP_init
  4166  0366  0873               	movf	??_CS2300CP_init,w
  4167  0367  00F1               	movwf	CS2300CP_write@data
  4168  0368  3017               	movlw	23
  4169  0369  3184  243E  3183   	fcall	_CS2300CP_write
  4170                           
  4171                           ;CS2300CP.c: 24: CS2300CP_write(0x03, 0b00000001);
  4172  036C  01F1               	clrf	CS2300CP_write@data
  4173  036D  0AF1               	incf	CS2300CP_write@data,f
  4174  036E  3003               	movlw	3
  4175  036F  3184  243E  3183   	fcall	_CS2300CP_write
  4176                           
  4177                           ;CS2300CP.c: 25: CS2300CP_write(0x05, 0b00000001);
  4178  0372  01F1               	clrf	CS2300CP_write@data
  4179  0373  0AF1               	incf	CS2300CP_write@data,f
  4180  0374  3005               	movlw	5
  4181  0375  3184  243E  3183   	fcall	_CS2300CP_write
  4182                           
  4183                           ;CS2300CP.c: 26: CS2300CP_write(0x016, 0b10010000);
  4184  0378  3090               	movlw	144
  4185  0379  00F3               	movwf	??_CS2300CP_init
  4186  037A  0873               	movf	??_CS2300CP_init,w
  4187  037B  00F1               	movwf	CS2300CP_write@data
  4188  037C  3016               	movlw	22
  4189  037D  3184  243E  3183   	fcall	_CS2300CP_write
  4190                           
  4191                           ;CS2300CP.c: 29: CS2300CP_write(0x06, 0x20);
  4192  0380  3020               	movlw	32
  4193  0381  00F3               	movwf	??_CS2300CP_init
  4194  0382  0873               	movf	??_CS2300CP_init,w
  4195  0383  00F1               	movwf	CS2300CP_write@data
  4196  0384  3006               	movlw	6
  4197  0385  3184  243E  3183   	fcall	_CS2300CP_write
  4198                           
  4199                           ;CS2300CP.c: 30: CS2300CP_write(0x07, 0x00);
  4200  0388  01F1               	clrf	CS2300CP_write@data
  4201  0389  3007               	movlw	7
  4202  038A  3184  243E  3183   	fcall	_CS2300CP_write
  4203                           
  4204                           ;CS2300CP.c: 31: CS2300CP_write(0x08, 0x00);
  4205  038D  01F1               	clrf	CS2300CP_write@data
  4206  038E  3008               	movlw	8
  4207  038F  3184  243E  3183   	fcall	_CS2300CP_write
  4208                           
  4209                           ;CS2300CP.c: 32: CS2300CP_write(0x09, 0x00);
  4210  0392  01F1               	clrf	CS2300CP_write@data
  4211  0393  3009               	movlw	9
  4212  0394  3184  243E  3183   	fcall	_CS2300CP_write
  4213                           
  4214                           ;CS2300CP.c: 34: CS2300CP_write(0x02, 0b00000010);
  4215  0397  3002               	movlw	2
  4216  0398  00F3               	movwf	??_CS2300CP_init
  4217  0399  0873               	movf	??_CS2300CP_init,w
  4218  039A  00F1               	movwf	CS2300CP_write@data
  4219  039B  3002               	movlw	2
  4220  039C  3184  243E  3183   	fcall	_CS2300CP_write
  4221  039F                     l289:	
  4222  039F  0008               	return
  4223  03A0                     __end_of_CS2300CP_init:	
  4224                           
  4225                           	psect	text12
  4226  043E                     __ptext12:	
  4227 ;; *************** function _CS2300CP_write *****************
  4228 ;; Defined at:
  4229 ;;		line 14 in file "CS2300CP.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  reg             1    wreg     unsigned char 
  4232 ;;  data            1    1[COMMON] unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  reg             1    2[COMMON] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4244 ;;      Params:         1       0       0       0       0       0       0       0
  4245 ;;      Locals:         1       0       0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0
  4247 ;;      Totals:         2       0       0       0       0       0       0       0
  4248 ;;Total ram usage:        2 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    3
  4251 ;; This function calls:
  4252 ;;		_I2C_Master_Start
  4253 ;;		_I2C_Master_Stop
  4254 ;;		_I2C_Master_Write
  4255 ;; This function is called by:
  4256 ;;		_CS2300CP_init
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _CS2300CP_write
  4262  043E                     _CS2300CP_write:	
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _CS2300CP_write: [wreg+status,2+status,0+pclath+cstack]
  4266                           ;CS2300CP_write@reg stored from wreg
  4267  043E  00F2               	movwf	CS2300CP_write@reg
  4268  043F                     l1299:	
  4269                           
  4270                           ;CS2300CP.c: 15: I2C_Master_Start();
  4271  043F  3184  2495  3184   	fcall	_I2C_Master_Start
  4272                           
  4273                           ;CS2300CP.c: 16: I2C_Master_Write(0b1001110 << 1);
  4274  0442  309C               	movlw	156
  4275  0443  3184  247A  3184   	fcall	_I2C_Master_Write
  4276                           
  4277                           ;CS2300CP.c: 17: I2C_Master_Write(reg);
  4278  0446  0872               	movf	CS2300CP_write@reg,w
  4279  0447  3184  247A  3184   	fcall	_I2C_Master_Write
  4280                           
  4281                           ;CS2300CP.c: 18: I2C_Master_Write(data);
  4282  044A  0871               	movf	CS2300CP_write@data,w
  4283  044B  3184  247A  3184   	fcall	_I2C_Master_Write
  4284                           
  4285                           ;CS2300CP.c: 19: I2C_Master_Stop();
  4286  044E  3184  248F  3184   	fcall	_I2C_Master_Stop
  4287  0451                     l286:	
  4288  0451  0008               	return
  4289  0452                     __end_of_CS2300CP_write:	
  4290                           
  4291                           	psect	text13
  4292  047A                     __ptext13:	
  4293 ;; *************** function _I2C_Master_Write *****************
  4294 ;; Defined at:
  4295 ;;		line 76 in file "I2C.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  data            1    wreg     unsigned char 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  data            1    0[COMMON] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, pclath, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4309 ;;      Params:         0       0       0       0       0       0       0       0
  4310 ;;      Locals:         1       0       0       0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0
  4312 ;;      Totals:         1       0       0       0       0       0       0       0
  4313 ;;Total ram usage:        1 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    2
  4316 ;; This function calls:
  4317 ;;		_I2C_Master_Wait
  4318 ;; This function is called by:
  4319 ;;		_LM49450_write
  4320 ;;		_CS2300CP_write
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function _I2C_Master_Write
  4326  047A                     _I2C_Master_Write:	
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4330                           ;I2C_Master_Write@data stored from wreg
  4331  047A  00F0               	movwf	I2C_Master_Write@data
  4332  047B                     l1293:	
  4333                           
  4334                           ;I2C.c: 78: I2C_Master_Wait();
  4335  047B  3184  2452  3184   	fcall	_I2C_Master_Wait
  4336  047E                     l1295:	
  4337                           
  4338                           ;I2C.c: 79: SSP1BUF = data;
  4339  047E  0870               	movf	I2C_Master_Write@data,w
  4340  047F  0143               	movlb	3	; select bank3
  4341  0480  008C               	movwf	12	;volatile
  4342  0481                     l234:	
  4343  0481  0008               	return
  4344  0482                     __end_of_I2C_Master_Write:	
  4345                           
  4346                           	psect	text14
  4347  048F                     __ptext14:	
  4348 ;; *************** function _I2C_Master_Stop *****************
  4349 ;; Defined at:
  4350 ;;		line 70 in file "I2C.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4364 ;;      Params:         0       0       0       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    2
  4371 ;; This function calls:
  4372 ;;		_I2C_Master_Wait
  4373 ;; This function is called by:
  4374 ;;		_LM49450_write
  4375 ;;		_CS2300CP_write
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function _I2C_Master_Stop
  4381  048F                     _I2C_Master_Stop:	
  4382  048F                     l1289:	
  4383                           ;incstack = 0
  4384                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4385                           
  4386                           
  4387                           ;I2C.c: 72: I2C_Master_Wait();
  4388  048F  3184  2452  3184   	fcall	_I2C_Master_Wait
  4389  0492                     l1291:	
  4390                           
  4391                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
  4392  0492  0143               	movlb	3	; select bank3
  4393  0493  1511               	bsf	17,2	;volatile
  4394  0494                     l231:	
  4395  0494  0008               	return
  4396  0495                     __end_of_I2C_Master_Stop:	
  4397                           
  4398                           	psect	text15
  4399  0495                     __ptext15:	
  4400 ;; *************** function _I2C_Master_Start *****************
  4401 ;; Defined at:
  4402 ;;		line 58 in file "I2C.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0, pclath, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4416 ;;      Params:         0       0       0       0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    2
  4423 ;; This function calls:
  4424 ;;		_I2C_Master_Wait
  4425 ;; This function is called by:
  4426 ;;		_LM49450_write
  4427 ;;		_CS2300CP_write
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _I2C_Master_Start
  4433  0495                     _I2C_Master_Start:	
  4434  0495                     l1285:	
  4435                           ;incstack = 0
  4436                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4437                           
  4438                           
  4439                           ;I2C.c: 60: I2C_Master_Wait();
  4440  0495  3184  2452  3184   	fcall	_I2C_Master_Wait
  4441  0498                     l1287:	
  4442                           
  4443                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
  4444  0498  0143               	movlb	3	; select bank3
  4445  0499  1411               	bsf	17,0	;volatile
  4446  049A                     l225:	
  4447  049A  0008               	return
  4448  049B                     __end_of_I2C_Master_Start:	
  4449                           
  4450                           	psect	text16
  4451  0452                     __ptext16:	
  4452 ;; *************** function _I2C_Master_Wait *****************
  4453 ;; Defined at:
  4454 ;;		line 53 in file "I2C.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4468 ;;      Params:         0       0       0       0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_I2C_Master_Start
  4479 ;;		_I2C_Master_Stop
  4480 ;;		_I2C_Master_Write
  4481 ;;		_I2C_Master_Repeated_Start
  4482 ;;		_I2C_Master_Read
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _I2C_Master_Wait
  4488  0452                     _I2C_Master_Wait:	
  4489  0452                     l1281:	
  4490                           ;incstack = 0
  4491                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4492                           
  4493  0452                     l219:	
  4494                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  4495                           
  4496  0452  0143               	movlb	3	; select bank3
  4497  0453  190F               	btfsc	15,2	;volatile
  4498  0454  2C56               	goto	u631
  4499  0455  2C57               	goto	u630
  4500  0456                     u631:	
  4501  0456  2C52               	goto	l219
  4502  0457                     u630:	
  4503  0457                     l1283:	
  4504  0457  0811               	movf	17,w	;volatile
  4505  0458  391F               	andlw	31
  4506  0459  1D03               	btfss	3,2
  4507  045A  2C5C               	goto	u641
  4508  045B  2C5D               	goto	u640
  4509  045C                     u641:	
  4510  045C  2C52               	goto	l219
  4511  045D                     u640:	
  4512  045D                     l222:	
  4513  045D  0008               	return
  4514  045E                     __end_of_I2C_Master_Wait:	
  4515                           
  4516                           	psect	intentry
  4517  0004                     __pintentry:	
  4518 ;; *************** function _ISR *****************
  4519 ;; Defined at:
  4520 ;;		line 41 in file "main.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4534 ;;      Params:         0       0       0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		Interrupt level 1
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547  0004                     _ISR:	
  4548                           
  4549                           ;incstack = 0
  4550  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4551                           
  4552                           ; Regs used in _ISR: [wreg]
  4553  0005  3180               	pagesel	$
  4554  0006                     i1l1399:	
  4555                           
  4556                           ;main.c: 43: if(TMR1IF) {
  4557  0006  014E               	movlb	14	; select bank14
  4558  0007  1C10               	btfss	16,0	;volatile
  4559  0008  280A               	goto	u73_21
  4560  0009  280B               	goto	u73_20
  4561  000A                     u73_21:	
  4562  000A  281A               	goto	i1l73
  4563  000B                     u73_20:	
  4564  000B                     i1l1401:	
  4565                           
  4566                           ;main.c: 44: TMR1IF = 0;
  4567  000B  1010               	bcf	16,0	;volatile
  4568                           
  4569                           ;main.c: 45: TMR1 = 65228;
  4570  000C  30FE               	movlw	254
  4571  000D  0144               	movlb	4	; select bank4
  4572  000E  008D               	movwf	13	;volatile
  4573  000F  30CC               	movlw	204
  4574  0010  008C               	movwf	12	;volatile
  4575  0011                     i1l1403:	
  4576                           
  4577                           ;main.c: 46: timer_counter++;
  4578  0011  3001               	movlw	1
  4579  0012  0140               	movlb	0	; select bank0
  4580  0013  07B4               	addwf	_timer_counter,f
  4581  0014  3000               	movlw	0
  4582  0015  3DB5               	addwfc	_timer_counter+1,f
  4583  0016  3000               	movlw	0
  4584  0017  3DB6               	addwfc	_timer_counter+2,f
  4585  0018  3000               	movlw	0
  4586  0019  3DB7               	addwfc	_timer_counter+3,f
  4587  001A                     i1l73:	
  4588  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4589  001B  0009               	retfie
  4590  001C                     __end_of_ISR:	
  4591  007E                     btemp	set	126	;btemp
  4592  007E                     int$flags	set	126
  4593  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         29
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LM49450_analog_init->_LM49450_write
    _LM49450_N64_init->_LM49450_write
    _LM49450_write->_I2C_Master_Write
    _I2C_Master_Init->___lldiv
    _CS2300CP_init->_CS2300CP_write
    _CS2300CP_write->_I2C_Master_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9376
                                              8 BANK0      2     2      0
                      _CS2300CP_init
                    _I2C_Master_Init
                   _LM49450_N64_init
                _LM49450_analog_init
                      _LM49450_write
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     402
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_time                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM49450_analog_init                                  2     2      0    2619
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_N64_init                                     2     2      0    2619
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_write                                        2     1      1    2574
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _CS2300CP_init                                        1     1      0     750
                                              3 COMMON     1     1      0
                     _CS2300CP_write
 ---------------------------------------------------------------------------------
 (2) _CS2300CP_write                                       2     1      1     750
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CS2300CP_init
     _CS2300CP_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _LM49450_N64_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_analog_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _get_time
   _timer_diff

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      39      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 12 17:10:30 2020

       __end_of_LM49450_write 043E         ??_LM49450_analog_init 0073                   __CFG_CP$OFF 0000  
                          l67 0413                    _PPS_unlock 0482                           l111 00DF  
                         l121 01B0                           l107 007E                           l222 045D  
                         l231 0494                           l216 03CD                           l225 049A  
                         l234 0481                           l250 0467                           l219 0452  
                         l139 025E                           l181 0479                           l253 0429  
                         l262 043D                           l274 0471                           l178 0488  
                         l277 03F4                           l286 0451                           l289 039F  
                         l393 0363                           _RA4 0064                           _RC0 0070  
                         _RA5 0065                           _RC1 0071                           _RC2 0072  
                         _RC4 0074                           _ISR 0004                           u630 0457  
                         u710 035B                           u631 0456                           u711 035A  
                         u640 045D                           u720 03B2                           u800 00D6  
                         u641 045C                           u705 034F                           u801 00D5  
                         u650 031A                           u810 00E6                           u651 0319  
                         u811 00E5                           u900 015A                           u820 00EB  
                         u740 006C                           u725 03AE                           u901 0159  
                         u821 00EA                           u741 006B                           u670 032C  
                         u910 0179                           u830 00F0                           u750 0094  
                         u671 032B                           u911 0178                           u831 00EF  
                         u751 0093                           u920 018B                           u840 00FF  
                         u760 0099                           u665 031E                           u921 018A  
                         u841 00FE                           u761 0098                           u690 0345  
                         u930 0191                           u850 0129                           u770 00AD  
                         u691 0344                           u931 0190                           u851 0128  
                         u771 00AC                           u940 0196                           u860 013F  
                         u780 00C7                           u685 032D                           u941 0195  
                         u861 013E                           u781 00C6                           u950 019D  
                         u870 0145                           u790 00D1                           u695 0341  
                         u951 019C                           u871 0144                           u791 00D0  
                         u960 01A2                           u880 014A                           u961 01A1  
                         u881 0149                           u970 01B5                           u890 0155  
                         u971 01B4                           u891 0154                           u980 01DF  
                         u981 01DE                           u990 01F5                           u991 01F4  
              ?_CS2300CP_init 0070          _vol_minus_time_start 0024                  __CFG_BORV$LO 0000  
                         wreg 0009                 __CFG_BBEN$OFF 0000                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  __CFG_ZCD$OFF 0000                          l1301 030A  
                        l1311 0333                          l1303 031A                          l1313 0345  
                        l1305 031D                          l1321 035B                          l1315 034D  
                        l1307 0328                          l1331 0401                          l1411 0046  
                        l1317 034E                          l1309 032C                          l1341 0409  
                        l1333 0404                          l1325 03F5                          l1501 01A5  
                        l1421 0077                          l1413 0049                          l1405 003A  
                        l1319 0355                          l1343 040D                          l1335 0405  
                        l1327 03FA                          l1351 0482                          l1511 01C2  
                        l1431 00A8                          l1423 008F                          l1415 005B  
                        l1407 0040                          l1281 0452                          l1361 03A4  
                        l1345 040F                          l1337 0406                          l1329 03FC  
                        l1353 0487                          l1601 02E6                          l1521 01F5  
                        l1513 01C5                          l1505 01B0                          l1441 00D6  
                        l1433 00AD                          l1425 0094                          l1417 0067  
                        l1409 0043                          l1283 0457                          l1291 0492  
                        l1363 03CB                          l1371 03D6                          l1347 0411  
                        l1339 0407                          l1355 0472                          l1603 02EC  
                        l1531 020C                          l1523 01FA                          l1515 01DF  
                        l1451 00F8                          l1435 00C7                          l1427 0099  
                        l1443 00E0                          l1419 006C                          l1285 0495  
                        l1293 047B                          l1365 0364                          l1357 03A0  
                        l1373 03DE                          l1349 0412                          l1605 02F6  
                        l1541 0240                          l1533 020F                          l1525 01FF  
                        l1517 01EB                          l1509 01B6                          l1461 010F  
                        l1445 00E6                          l1437 00CC                          l1453 00FA  
                        l1429 00A5                          l1287 0498                          l1295 047E  
                        l1359 03A3                          l1375 03E6                          l1367 03CE  
                        l1383 0468                          l1391 045E                          l1607 02FE  
                        l1535 0229                          l1527 0202                          l1519 01EF  
                        l1551 0251                          l1471 0145                          l1463 0129  
                        l1447 00EB                          l1439 00D1                          l1289 048F  
                        l1297 042B                          l1377 03EE                          l1369 03CE  
                        l1385 0468                          l1609 0303                          l1545 0246  
                        l1537 0235                          l1529 0207                          l1553 0253  
                        l1481 015F                          l1473 014A                          l1465 0135  
                        l1457 0100                          l1449 00F0                          l1299 043F  
                        l1379 03F3                          l1387 0470                          l1395 0414  
                        l1571 0287                          l1563 026C                          l1547 024B  
                        l1539 023B                          l1483 0179                          l1475 014F  
                        l1467 0139                          l1459 010C                          l1565 0275  
                        l1573 0289                          l1557 025E                          l1493 0197  
                        l1485 0185                          l1477 0155                          l1469 013F  
                        l1591 02C0                          l1567 0279                          l1583 02A7  
                        l1559 0265                          l1575 0297                          l1495 019D  
                        l1487 018B                          l1479 015A                          l1593 02CA  
                        l1585 02AD                          l1577 029C                          l1569 0281  
                        l1489 0191                          l1587 02B2                          l1595 02D2  
                        l1579 02A0                          l1499 01A3                          l1597 02D9  
                        l1589 02BA                          l1599 02DE                          u1000 01FA  
                        u1001 01F9                          u1010 01FF                          u1011 01FE  
                        u1100 0265                          u1020 0207                          u1101 0264  
                        u1021 0206                          u1110 026B                          u1030 020C  
                        u1111 026A                          u1031 020B                          u1120 029C  
                        u1040 0229                          u1121 029B                          u1041 0228  
                        u1130 02A6                          u1050 023B                          u1131 02A5  
                        u1051 023A                          u1140 02AD                          u1060 0240  
                        u1141 02AC                          u1061 023F                          u1150 02B2  
                        u1070 0245                          u1151 02B1                          u1071 0244  
                        u1160 02C0                          u1080 024B                          u1161 02BF  
                        u1081 024A                          u1217 0061                          u1170 02D9  
                        u1090 0250                          u1171 02D8                          u1091 024F  
                        u1180 02DE                          u1181 02DD                          u1190 02EC  
                        u1191 02EB                          i1l73 001A                          _TMR1 020C  
                        _WPUA 1F39                          _WPUC 1F4F                 __CFG_FCMEN$ON 0000  
             ?_CS2300CP_write 0071                          _main 003A                          fsr0h 0005  
                        indf0 0000                          fsr0l 0004                          btemp 007E  
                        start 001C                 __CFG_CSWEN$ON 0000                         ??_ISR 0070  
          __size_of_PIC_SETUP 001F              ?_I2C_Master_Init 003D              ?_I2C_Master_Wait 0070  
            ?_I2C_Master_Stop 0070                         ?_main 0070                 __CFG_WDTE$OFF 0000  
             __end_of___lldiv 0364                         _T1CLK 0211                         u73_20 000B  
                       u73_21 000A                         _TRISA 0012                         _TRISC 0014  
               __CFG_WRTB$OFF 0000                 __CFG_WRTC$OFF 0000                __CFG_BOREN$OFF 0000  
            __end_of_PPS_lock 047A             ?_LM49450_N64_init 0070                         status 0003  
                       wtemp0 007E            ??_LM49450_N64_init 0073             CS2300CP_write@reg 0072  
              __CFG_MCLRE$OFF 0000               __initialization 001E                  __end_of_main 030A  
              __CFG_SAFEN$OFF 0000               ??_CS2300CP_init 0073                   ?_PPS_unlock 0070  
                      ??_main 0045             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070  
          ??_I2C_Master_Start 0070            ??_I2C_Master_Write 0070                        _ANSELA 1F38  
                      _ANSELC 1F4E                        _RC0PPS 1F20                        _RC1PPS 1F21  
                      i1l1401 000B                        i1l1403 0011                        i1l1399 0006  
           __end_of_PIC_SETUP 0414                        _TMR1IF 3880                _HPS_time_start 0030  
              __CFG_PWRTE$OFF 0000              __end_of_get_time 0468                __CFG_STVREN$ON 0000  
                   ??___lldiv 0078       __end_of__initialization 0036           __size_of_PPS_unlock 0007  
          CS2300CP_write@data 0071                __pcstackCOMMON 0070                  __pidataBANK0 049B  
                   ?_PPS_lock 0070              ??_CS2300CP_write 0072                    __pbssBANK0 0020  
 __end_of_LM49450_analog_init 0472                    __pmaintext 003A                    __pintentry 0004  
         __CFG_RSTOSC$HFINT32 0000                    ??_PPS_lock 0070                       _SSP1ADD 018D  
                     _PPSLOCK 1E8F                       _SSP1BUF 018C                _vol_plus_state 0039  
      __size_of_LM49450_write 0014                     ?_get_time 0070                       ___lldiv 030A  
   __size_of_LM49450_N64_init 0027                  ??_PPS_unlock 0070                       __ptext1 0414  
                     __ptext2 045E                       __ptext3 0482                       __ptext4 0472  
                     __ptext5 03F5                       __ptext6 0468                       __ptext7 03CE  
                     __ptext8 042A                       __ptext9 03A0               __CFG_WRTAPP$OFF 0000  
                __size_of_ISR 0018                     _T1CONbits 020E               __CFG_WRTSAF$OFF 0000  
    __size_of_I2C_Master_Init 002E      __size_of_I2C_Master_Wait 000C      __size_of_I2C_Master_Stop 0006  
                     clrloop0 048A                    ??_get_time 0074          end_of_initialization 0036  
   __size_of_I2C_Master_Start 0006            __end_of_PPS_unlock 0489                     _PIC_SETUP 03F5  
   __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0070               ___lldiv@counter 007D  
               _LM49450_write 042A                     _HPS_state 003A         __CFG_WDTCPS$WDTCPS_13 0000  
                  _timer_diff 0414                    _mute_state 003B         __end_of_CS2300CP_init 03A0  
           LM49450_write@data 0071          __CFG_WDTCCS$LFINTOSC 0000                     _TRISCbits 0014  
                 timer_diff@t 0070              __CFG_FEXTOSC$OFF 0000           _vol_minus_time_hold 0020  
                  ?_PIC_SETUP 0070                ?_LM49450_write 0071             __size_of_PPS_lock 0008  
         start_initialization 001E                   __end_of_ISR 001C             ??_I2C_Master_Init 0041  
           ??_I2C_Master_Wait 0070             ??_I2C_Master_Stop 0070              __CFG_LPBOREN$OFF 0000  
                 __pdataBANK0 0047              _LM49450_N64_init 03CE                   ?_timer_diff 0070  
                   ___latbits 0001                 __pcstackBANK0 003D                _volume_hp_prev 0047  
              _volume_sp_prev 0049             __size_of_get_time 000A               _vol_minus_state 0038  
            _I2C_Master_Start 0495                   ??_PIC_SETUP 0070              _I2C_Master_Write 047A  
             ??_LM49450_write 0072                      ?___lldiv 0070              __CFG_PPS1WAY$OFF 0000  
__size_of_LM49450_analog_init 000A          I2C_Master_Write@data 0070           __size_of_timer_diff 0016  
                   clear_ram0 0489                      _PIE4bits 071A       __size_of_CS2300CP_write 0014  
           __CFG_BBSIZE$BB512 0000                      _SSP1CON1 0190                      _SSP1CON2 0191  
                    _SSP1STAT 018F              LM49450_write@reg 0072                      _PPS_lock 0472  
                   _volume_hp 0048                     _volume_sp 004A              __size_of___lldiv 005A  
             _I2C_Master_Init 03A0               _I2C_Master_Wait 0452               _I2C_Master_Stop 048F  
                    __ptext10 030A                      __ptext11 0364                      __ptext12 043E  
                    __ptext13 047A                    _T1GCONbits 020F                      __ptext14 048F  
                    __ptext15 0495                      __ptext16 0452                  _SSP1CON2bits 0191  
                    _get_time 045E      __end_of_LM49450_N64_init 03F5                 __size_of_main 02D0  
        __CFG_WDTCWS$WDTCWS_7 0000        __size_of_CS2300CP_init 003C                      int$flags 007E  
               _timer_counter 0034                  ??_timer_diff 0074            I2C_Master_Init@clk 003D  
    __end_of_I2C_Master_Start 049B      __end_of_I2C_Master_Write 0482                    _INTCONbits 000B  
                    intlevel1 0000           _LM49450_analog_init 0468              ___lldiv@dividend 0074  
           __CFG_CLKOUTEN$OFF 0000            __end_of_timer_diff 042A                _CS2300CP_write 043E  
         _vol_plus_time_start 002C       __end_of_I2C_Master_Init 03CE       __end_of_I2C_Master_Wait 045E  
        ?_LM49450_analog_init 0070       __end_of_I2C_Master_Stop 0495                    _SSP1DATPPS 1EC6  
                  _SSP1CLKPPS 1EC5              ___lldiv@quotient 0079                 _CS2300CP_init 0364  
          _vol_plus_time_hold 0028                   _mute_config 003C        __end_of_CS2300CP_write 0452  
